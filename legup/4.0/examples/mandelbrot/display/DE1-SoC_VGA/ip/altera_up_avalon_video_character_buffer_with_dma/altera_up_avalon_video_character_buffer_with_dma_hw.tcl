# +----------------------------------------------------------------------------+
# | License Agreement                                                          |
# |                                                                            |
# | Copyright (c) 1991-2013 Altera Corporation, San Jose, California, USA.     |
# | All rights reserved.                                                       |
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

# +-----------------------------------
# | module altera_up_avalon_video_character_buffer_with_dma
# | 
set_module_property DESCRIPTION "A buffer for ascii characters to be displayed on a VGA/LCD Screen"
set_module_property NAME altera_up_avalon_video_character_buffer_with_dma
set_module_property VERSION 13.0
set_module_property GROUP "University Program/Audio & Video/Video"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "Character Buffer for VGA Display"
set_module_property DATASHEET_URL "../doc/Video.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_video_character_buffer_with_dma.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_video_character_buffer_with_dma
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property VALIDATION_CALLBACK validate
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
# add_file altera_up_avalon_video_character_buffer_with_dma.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_128_character_rom.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_fb_color_rom.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_char_mode_rom_128.mif" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_fb_color_rom.mif" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter vga_device string "On-board VGA DAC"
set_parameter_property vga_device DISPLAY_NAME "Video-Out Device"
#set_parameter_property vga_device GROUP "General Settings"
set_parameter_property vga_device UNITS None
set_parameter_property vga_device AFFECTS_ELABORATION true
set_parameter_property vga_device AFFECTS_GENERATION true
set_parameter_property vga_device ALLOWED_RANGES {"On-board VGA DAC" "LCD with touchscreen (TRDB_LTM)"}
#set_parameter_property vga_device ALLOWED_RANGES {"On-board VGA DAC" "LCD Screen (TRDB_LCM)" "LCD with touchscreen (TRDB_LTM)"}
set_parameter_property vga_device VISIBLE true
set_parameter_property vga_device ENABLED true

add_parameter enable_transparency boolean "false" 
set_parameter_property enable_transparency DISPLAY_NAME "Enable Transparency"
#set_parameter_property enable_transparency GROUP "General Settings"
set_parameter_property enable_transparency UNITS None
set_parameter_property enable_transparency AFFECTS_ELABORATION true
set_parameter_property enable_transparency AFFECTS_GENERATION true
set_parameter_property enable_transparency VISIBLE true
set_parameter_property enable_transparency ENABLED true

add_parameter color_bits string "1-bit" 
set_parameter_property color_bits DISPLAY_NAME "Color Settings"
#set_parameter_property color_bits GROUP ""
set_parameter_property color_bits UNITS None
set_parameter_property color_bits AFFECTS_ELABORATION true
set_parameter_property color_bits AFFECTS_GENERATION true
set_parameter_property color_bits ALLOWED_RANGES {"9-bits" "8-bits" "4-bits" "1-bit"}
set_parameter_property color_bits VISIBLE false
set_parameter_property color_bits ENABLED true

add_parameter resolution string "80 x 60" 
set_parameter_property resolution DISPLAY_NAME "Character Size"
#set_parameter_property resolution GROUP ""
set_parameter_property resolution UNITS None
set_parameter_property resolution AFFECTS_ELABORATION true
set_parameter_property resolution AFFECTS_GENERATION true
set_parameter_property resolution ALLOWED_RANGES {"80 x 60" "40 x 30"}
set_parameter_property resolution VISIBLE false
set_parameter_property resolution ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clock_reset
# | 
add_interface clock_reset clock end
set_interface_property clock_reset ptfSchematicName ""

add_interface_port clock_reset clk clk Input 1
add_interface_port clock_reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_char_control_slave
# | 
add_interface avalon_char_control_slave avalon end clock_reset
set_interface_property avalon_char_control_slave addressAlignment DYNAMIC
set_interface_property avalon_char_control_slave bridgesToMaster ""
set_interface_property avalon_char_control_slave burstOnBurstBoundariesOnly false
#set_interface_property avalon_char_control_slave explicitAddressSpan 8
set_interface_property avalon_char_control_slave holdTime 0
set_interface_property avalon_char_control_slave isBigEndian  false
set_interface_property avalon_char_control_slave isFlash false
set_interface_property avalon_char_control_slave isMemoryDevice false
set_interface_property avalon_char_control_slave isNonVolatileStorage false
set_interface_property avalon_char_control_slave linewrapBursts false
set_interface_property avalon_char_control_slave maximumPendingReadTransactions 0
set_interface_property avalon_char_control_slave minimumUninterruptedRunLength 1
set_interface_property avalon_char_control_slave printableDevice false
set_interface_property avalon_char_control_slave readLatency 1
set_interface_property avalon_char_control_slave readWaitTime 0
set_interface_property avalon_char_control_slave setupTime 0
set_interface_property avalon_char_control_slave timingUnits cycles
set_interface_property avalon_char_control_slave writeWaitTime 0

add_interface_port avalon_char_control_slave ctrl_address address Input 1
add_interface_port avalon_char_control_slave ctrl_byteenable byteenable Input 4
add_interface_port avalon_char_control_slave ctrl_chipselect chipselect Input 1
add_interface_port avalon_char_control_slave ctrl_read read Input 1
add_interface_port avalon_char_control_slave ctrl_write write Input 1
add_interface_port avalon_char_control_slave ctrl_writedata writedata Input 32
add_interface_port avalon_char_control_slave ctrl_readdata readdata Output 32
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_char_buffer_slave
# | 
add_interface avalon_char_buffer_slave avalon end clock_reset
set_interface_property avalon_char_buffer_slave addressAlignment DYNAMIC
set_interface_property avalon_char_buffer_slave bridgesToMaster ""
set_interface_property avalon_char_buffer_slave burstOnBurstBoundariesOnly false
set_interface_property avalon_char_buffer_slave holdTime 0
set_interface_property avalon_char_buffer_slave isBigEndian  false
set_interface_property avalon_char_buffer_slave isFlash false
set_interface_property avalon_char_buffer_slave isMemoryDevice false
set_interface_property avalon_char_buffer_slave isNonVolatileStorage false
set_interface_property avalon_char_buffer_slave linewrapBursts false
set_interface_property avalon_char_buffer_slave maximumPendingReadTransactions 0
set_interface_property avalon_char_buffer_slave minimumUninterruptedRunLength 1
set_interface_property avalon_char_buffer_slave printableDevice false
set_interface_property avalon_char_buffer_slave readLatency 1
set_interface_property avalon_char_buffer_slave readWaitTime 0
set_interface_property avalon_char_buffer_slave setupTime 0
set_interface_property avalon_char_buffer_slave timingUnits cycles
set_interface_property avalon_char_buffer_slave writeWaitTime 0

add_interface_port avalon_char_buffer_slave buf_byteenable byteenable Input 1
add_interface_port avalon_char_buffer_slave buf_chipselect chipselect Input 1
add_interface_port avalon_char_buffer_slave buf_read read Input 1
add_interface_port avalon_char_buffer_slave buf_write write Input 1
add_interface_port avalon_char_buffer_slave buf_writedata writedata Input 8
add_interface_port avalon_char_buffer_slave buf_readdata readdata Output 8
add_interface_port avalon_char_buffer_slave buf_waitrequest waitrequest Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_char_source
# | 
add_interface avalon_char_source avalon_streaming start clock_reset
set_interface_property avalon_char_source errorDescriptor ""
set_interface_property avalon_char_source maxChannel 0
set_interface_property avalon_char_source readyLatency 0

add_interface_port avalon_char_source stream_ready ready Input 1
add_interface_port avalon_char_source stream_startofpacket startofpacket Output 1
add_interface_port avalon_char_source stream_endofpacket endofpacket Output 1
#add_interface_port avalon_char_source stream_empty empty Output 2
add_interface_port avalon_char_source stream_valid valid Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Validation function
# | 
proc validate {} {
	set vga_device [ get_parameter_value "vga_device" ]
	set enable_transparency [ get_parameter_value "enable_transparency" ]
	set color_bits [ get_parameter_value "color_bits" ]
	set resolution [ get_parameter_value "resolution" ]

#	set color_info "Color Format Conversion: 8-bit greyscale -> 30-bit RGB"
	if { $vga_device == "On-board VGA DAC" } {
#		send_message info "Character Format: 80 x 60 and $color_info"
		send_message info "Character Resolution: 80 x 60"
	} elseif { $vga_device == "LCD Screen (TRDB_LCM)" } {
		send_message info "Character Resolution: 40 x 30"
	} else {
		send_message info "Character Resolution: 50 x 30"
	}
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set vga_device [ get_parameter_value "vga_device" ]
	set enable_transparency [ get_parameter_value "enable_transparency" ]
	set color_bits [ get_parameter_value "color_bits" ]
	set resolution [ get_parameter_value "resolution" ]

	if { $vga_device == "On-board VGA DAC" } {
#		set_interface_property avalon_char_buffer_slave explicitAddressSpan 8192

		add_interface_port avalon_char_buffer_slave buf_address address Input 13
	} else {
#		set_interface_property avalon_char_buffer_slave explicitAddressSpan 2048

		add_interface_port avalon_char_buffer_slave buf_address address Input 11
	}

	if { $enable_transparency } {
		set_interface_property avalon_char_source dataBitsPerSymbol 10
		set_interface_property avalon_char_source symbolsPerBeat 4

		add_interface_port avalon_char_source stream_data data Output 40
	} else {
		set_interface_property avalon_char_source dataBitsPerSymbol 10
		set_interface_property avalon_char_source symbolsPerBeat 3

		add_interface_port avalon_char_source stream_data data Output 30
	}
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of Character Buffer"

	# get parameter values
	set vga_device [ get_parameter_value "vga_device" ]
	set enable_transparency [ get_parameter_value "enable_transparency" ]
	set color_bits [ get_parameter_value "color_bits" ]
	set resolution [ get_parameter_value "resolution" ]

	if { $color_bits == "1-bit" } {
		set data_width "DW:8"
	} else {
		set data_width "DW:16"
	}

	if { $vga_device == "LCD with touchscreen (TRDB_LTM)" } {
		set enlarge_char_factor "ENLARGE_CHAR:1"
	} else {
		set enlarge_char_factor "ENLARGE_CHAR:0"
	}
#	if { $resolution == "80 x 60" } {
#		set addr_width "AW:13"
#		set buffer_size "BUFFER_SIZE:8192"
#
#		set enlarge_char "ENLARGE_CHAR:0"
#	} else {
#		set addr_width "AW:11"
#		set buffer_size "BUFFER_SIZE:2048"
#
#		set enlarge_char "ENLARGE_CHAR:1"
#	}

	# set section values
	set use_lcd_screen	[ format "USE_TRDB_LCM:%d" [ string match "LCD Screen (TRDB_LCM)" $vga_device ] ]
	set use_ltm_screen	[ format "USE_TRDB_LTM:%d" [ string match "LCD with touchscreen (TRDB_LTM)" $vga_device ] ]

	set use_transparency "USE_TRANSPARENCY:0"
	if { $enable_transparency } {
		set use_transparency "USE_TRANSPARENCY:1"
	}

	set use_fg_colour "USE_FOREGROUND_COLOR:0"
	set use_bg_colour "USE_BACKGROUND_COLOR:0"
	set use_1bit_colour "USE_1BIT_COLOR:0"
	set use_4bit_colour "USE_4BIT_COLOR:0"
	set use_8bit_colour "USE_8BIT_COLOR:0"
	set use_9bit_colour "USE_9BIT_COLOR:0"
	if { $color_bits == "1-bit" } {
		set use_1bit_colour "USE_1BIT_COLOR:1"
	} elseif { $color_bits == "4-bits" } {
		set use_fg_colour "USE_FOREGROUND_COLOR:1"

		set use_4bit_colour "USE_4BIT_COLOR:1"
	} elseif { $color_bits == "8-bits" } {
		set use_fg_colour "USE_FOREGROUND_COLOR:1"
		set use_bg_colour "USE_BACKGROUND_COLOR:1"

		set use_8bit_colour "USE_8BIT_COLOR:1"
	} else {
		set use_9bit_colour "USE_9BIT_COLOR:1"
	}
	
	# set arguments
#	set params "$addr_width;$data_width;$buffer_size;$enlarge_char"
	set params "$data_width;$enlarge_char_factor"
	set sections "$use_lcd_screen;$use_ltm_screen;$use_transparency;$use_fg_colour;$use_bg_colour;$use_1bit_colour;$use_4bit_colour;$use_8bit_colour;$use_9bit_colour" 

	# get generation settings
	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	set file_ending "v"
	if { $dest_language == "VHDL" || $dest_language == "vhdl" } {
		set file_ending "vhd"
	}

	add_file "$dest_dir$dest_name.$file_ending" {SYNTHESIS SIMULATION}
	# add_file "$dest_dir/altera_up_video_128_character_rom.$file_ending" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_fb_color_rom.$file_ending" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_char_mode_rom_128.mif" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_fb_color_rom.mif" SYNTHESIS

	# Generate HDL
	source "up_ip_generator.tcl"
	 alt_up_generate "$dest_dir$dest_name.$file_ending" "hdl/altera_up_avalon_video_character_buffer_with_dma.$file_ending" "altera_up_avalon_video_character_buffer_with_dma" $dest_name $params $sections
	# file copy -force "hdl/altera_up_video_128_character_rom.$file_ending" $dest_dir
	# file copy -force "hdl/altera_up_video_fb_color_rom.$file_ending" $dest_dir
	# file copy -force "hdl/altera_up_video_char_mode_rom_128.mif" $dest_dir
	# file copy -force "hdl/altera_up_video_fb_color_rom.mif" $dest_dir
 }
# | 
# +-----------------------------------

