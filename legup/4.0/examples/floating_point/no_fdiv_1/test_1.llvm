; ModuleID = 'testGen'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "i386-pc-linux-gnu"

@.str = private constant [15 x i8] c"return_val:%u\0A\00", align 1

define i32 @testFunc(i32 %input_0, i32 %input_1, i32 %input_2, i32 %input_3, i32 %input_4) {
BB_0:
  br label %BB_2

BB_1:                                             ; preds = %BB_2
  %0 = fptosi float %11 to i32
  ret i32 %0

BB_2:                                             ; preds = %BB_0
  %1 = sitofp i32 %input_1 to float
  %2 = sitofp i32 %input_4 to float
  %3 = fsub float %1, %2
  %4 = sitofp i32 %input_3 to float
  %5 = sitofp i32 72 to float
  %6 = fsub float %4, %5
  %7 = sitofp i32 %input_0 to float
  %8 = fsub float %3, %7
  %9 = sitofp i32 %input_2 to float
  %10 = fsub float %6, %9
  %11 = fsub float %8, %10
  br label %BB_1
}

define i32 @main() {
  %1 = call i32 @testFunc(i32 20, i32 20, i32 20, i32 20, i32 20)
  %2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str, i32 0, i32 0), i32 %1)
  ret i32 %1
}

declare i32 @printf(i8*, ...)
