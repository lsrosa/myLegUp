First turn on LOCAL_RAMS to generate Verilog. 
All the same steps below for case 3 have to be done first. 

1. For a caller function, make the callee's start, arguments output reg ports
make the callee's finish, return_val signals input ports

2. Strip out all module instantiations, and instantiate them at top-level
Create all necessary wires and connections between callers/callees

3. In each caller function, in the call state that connects caller's 
memory controller signals to callee's, remove all those since they will
be connected at the top-level. However make sure that there is at least 
one if assignment, such as 
if (cur_state==LEGUP_0)
    memory_controller_address_a = 0;
otherwise, without any if statement, the signal will be undefined.

New Steps

4. Now create for any modules that access multiple RAMS which are not localized
create separate memory controller ports for each RAM 
For this case, this wasn't necessary since one memory was assigned to portA, 
and the other memory was assigned to portB. We would need to change the scheduling
to allow more than 2 memory accesses at the same time

