###############################################
# Configurations that you may want to change:
###############################################

# target FPGA device family
FAMILY = CycloneII
#FAMILY = StratixIV

# default period constraints
ifeq ($(LEGUP_SDC_PERIOD),)
ifeq ($(FAMILY),CycloneII)
	export LEGUP_SDC_PERIOD = 15
endif
ifeq ($(FAMILY),StratixIV)
	export LEGUP_SDC_PERIOD = 5
endif
endif

# suppresses harmless warning:
# ** Warning: (vopt-2009) At least one design unit was compiled with optimization level -O0 or -O1.
#VSIMFLAG += -note 2009

# if running on Scinet, set path to Scinet directory
ifdef USE_SCINET
	LEVEL=$(SCINET_EXAMPLES_DIR)
endif

# whether using Release or Debug LLVM build
ifndef LLVM_BUILD
	LLVM_BUILD = Release+Asserts
endif

# path to front-end, such as llvm-gcc, clang or llvm-g++
ifndef FRONT_END
	FRONT_END = clang
endif

# prefix of mipsel gcc
MIPS_PREFIX = $(LEVEL)/../mips-binutils/bin/mipsel-elf-

# use oldtestmips if using gxemul 0.6, testmips if using gxemul 0.4.7.2
GXEMUL_OPT = testmips

# make sure for loops fail properly in the makefile
SHELL := /bin/bash -e

ifndef EXPECT
	EXPECT := /usr/bin/expect
	#EXPECT := /home/jchoi/expect5.45/expect
endif

###############################################
# Configurations that shouldn't change:
###############################################

# suppress warnings like:
# sha.c:52: warning: conflicting types for built-in function ‘memset’
CFLAG += -fno-builtin -m32 -I $(LEVEL)/lib/include/

# for ubuntu 11.10 header files
CFLAG += -I/usr/include/i386-linux-gnu

# location of mips libraries
MIPS_LIB = $(LEVEL)/../tiger/linux_tools/lib

# location of profiling code
PROF_LIB = $(LEVEL)/../tiger/tool_source/Profiling

# parameters for profiling
NUM_FUNCTIONS = 16
LOG_NUM_FUNCTIONS = 4
RESULTS_CONVERT = convertPowerResults #convertFuncResults		# convertFuncResults or convertPowerResults
COUNTER_WIDTH = 32

# ie. for chstone/jpeg this would be jpeg
PWD = $(shell pwd)

# location of tiger mips processor
PROC_PROF_DIR = $(LEVEL)/../tiger/processor/tiger_hybrid/simulation
PROC_HY_PROF_DIR = $(LEVEL)/../tiger/processor/tiger_hybrid/simulation
#PROC_DIR = $(PWD)/$(LEVEL)/../tiger/processor/tiger_DE2/tiger_sim
PROC_DIR = $(LEVEL)/../tiger/processor/tiger_hybrid_pipelined

# modified tiger processor for hybrid cases 
#HYBRID_PROC = $(PWD)/$(LEVEL)/../tiger/processor/tiger_modified
HYBRID_PROC = $(LEVEL)/../tiger/processor/tiger_hybrid_pipelined

# location of hybrid circuits
HYBRID_DIR = $(LEVEL)/../tiger/hybrid/

# ie. for chstone/jpeg this would be jpeg
BASENAME = $(shell basename $(PWD))

# files that modelsim should include
VERILOG_LIBS = $(PROC_DIR)/../altera_libs/altera_mf.v $(PROC_DIR)/../altera_libs/220model.v

# define modelsim base directory
MODEL_HOME = ${shell which vsim}/../..

# path to llvm executables such as opt and llc (keep trailing /)
LLVM_HOME = $(LEVEL)/../llvm/$(LLVM_BUILD)/bin/

# path to llvm libraries such as shared libraries used for opt (keep trailing /)
LIB_DIR = $(LEVEL)/../llvm/$(LLVM_BUILD)/lib/

POLLY_LIB_DIR = $(LEVEL)/../llvm/tools/polly/$(LLVM_BUILD)/lib/
CLOOG_DIR = $(LEVEL)/../cloog/install/lib/

# include polly libraries, LLVM libraries, and global configuration
OPT_FLAGS = -load=$(CLOOG_DIR)libisl.so -load=$(CLOOG_DIR)libcloog-isl.so \
            -load=$(POLLY_LIB_DIR)LLVMPolly.so -load=$(LIB_DIR)LLVMLegUp.so \
            -legup-config=$(LEVEL)/legup.tcl

# path to llvm-ar libraries, such as LLVM intrinsics
AR_DIR = $(LEVEL)/lib/llvm

# include area information and global settings
LLC_FLAGS = -legup-config=$(LEVEL)/../hwtest/$(FAMILY).tcl \
            -legup-config=$(LEVEL)/legup.tcl

# name of Verilog file
VFILE = $(NAME).v

# name of Verilog file
VFILE = $(NAME).v

# create work directory if necessary
ifeq ($(wildcard work),) 
	VLIB = vsim $(VSIMFLAG) -c -do "vlib work; exit;" 
else
	VLIB =
endif

# CFLAG optimization level switch
ifeq ($(NO_OPT),1) 
	CFLAG += -O1
else
	CFLAG += -O1
endif

# link time optimization switch
ifeq ($(NO_INLINE),1)
	LDFLAG += -disable-inlining -disable-opt
	CFLAG += -mllvm -inline-threshold=-100
endif

# targets to make
TARGETS = all watch v p q f tiger tiger_prof tigersim tigersim_prof gprof emul emulwatch emultest emultrace hierarchy cleantiger clean cleanall functionslist hybrid 
