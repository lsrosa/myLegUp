<session jtag_chain="USB-Blaster [2-2.2]" jtag_device="@1: EP2C35 (0x020B40DD)" sof_file="">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <global_info>
    <single attribute="active instance" value="0"/>
    <multi attribute="frame size" size="2" value="1855,1056"/>
    <single attribute="jtag widget visible" value="1"/>
    <multi attribute="jtag widget size" size="2" value="406,145"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="hierarchy widget visible" value="1"/>
    <single attribute="data log widget visible" value="1"/>
    <multi attribute="column width" size="23" value="34,34,502,74,201,70,88,88,98,98,88,88,177,101,101,101,101,101,101,101,101,107,78"/>
  </global_info>
  <instance entity_name="sld_signaltap" is_auto_node="yes" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <position_info>
      <single attribute="active tab" value="1"/>
    </position_info>
    <signal_set global_temp="1" name="signal_set: 2015/03/10 14:07:38  #0">
      <clock name="CLOCK_50" polarity="posedge" tap_mode="classic"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="128" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="top:top_inst|dbg_active_instance[0]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_active_instance[1]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[0]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[1]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[2]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[3]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[4]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[5]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[6]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[1]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[2]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[3]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[4]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[5]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[6]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[7]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CLR_BREAKPOINT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_HOLD" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_INVALID_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_LISTENING" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_PC_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_READBACK_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RESET" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES_SAVE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SET_BREAKPOINT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SYSTEM_ID_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_MODULE_ID" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_STATE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PROCESS_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_REQUEST_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_SIZE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SEND" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SEND_REFRESH_NOTICE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_COND_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_CONFIG_AND_OR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_AND_OR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_OPCODE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_MODULE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_STATE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_UPDATE_PC" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_START" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_CHECK" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_SAVE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_CHECK" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WAIT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|program_running_r" tap_mode="classic"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="top:top_inst|dbg_active_instance[0]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_active_instance[1]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[0]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[1]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[2]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[3]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[4]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[5]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[6]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[1]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[2]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[3]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[4]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[5]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[6]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[7]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CLR_BREAKPOINT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_HOLD" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_INVALID_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_LISTENING" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_PC_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_READBACK_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RESET" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES_SAVE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SET_BREAKPOINT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SYSTEM_ID_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_MODULE_ID" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_STATE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PROCESS_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_REQUEST_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_SIZE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SEND" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SEND_REFRESH_NOTICE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_COND_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_CONFIG_AND_OR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_AND_OR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_OPCODE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_MODULE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_STATE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_UPDATE_PC" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_START" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_CHECK" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_SAVE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_CHECK" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WAIT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|program_running_r" tap_mode="classic"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="top:top_inst|dbg_active_instance[0]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_active_instance[1]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[0]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[1]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[2]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[3]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[4]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[5]" tap_mode="classic"/>
          <wire name="top:top_inst|dbg_current_state[6]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[1]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[2]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[3]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[4]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[5]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[6]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[7]" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CLR_BREAKPOINT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_HOLD" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_INVALID_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_LISTENING" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_PC_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_READBACK_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RESET" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES_SAVE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SET_BREAKPOINT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SYSTEM_ID_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_MODULE_ID" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_STATE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PROCESS_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DROP_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_REQ" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_MSG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_REQUEST_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_SIZE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SEND" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SEND_REFRESH_NOTICE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_COND_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_CONFIG_AND_OR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_AND_OR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_OPCODE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_MODULE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_STATE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_UPDATE_PC" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_START" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_RECV_TAG" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_CHECK" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_SAVE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_CHECK" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WAIT" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE_DONE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE2" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE3" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_PERFORM_WRITE" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_ADDR" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_DATA" tap_mode="classic"/>
          <wire name="top:top_inst|hlsd:hlsd_inst|program_running_r" tap_mode="classic"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <unified_setup_data_view>
          <node data_index="9" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|program_running_r" storage_index="9" tap_mode="classic" trigger_index="9" type="combinatorial"/>
          <node name="top:top_inst|dbg_active_instance" order="msb_to_lsb" radix="unsigned_dec" type="combinatorial">
            <node data_index="1" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_active_instance[1]" storage_index="1" tap_mode="classic" trigger_index="1" type="combinatorial"/>
            <node data_index="0" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_active_instance[0]" storage_index="0" tap_mode="classic" trigger_index="0" type="combinatorial"/>
          </node>
          <node name="top:top_inst|dbg_current_state" order="msb_to_lsb" radix="unsigned_dec" type="combinatorial">
            <node data_index="8" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[6]" storage_index="8" tap_mode="classic" trigger_index="8" type="combinatorial"/>
            <node data_index="7" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[5]" storage_index="7" tap_mode="classic" trigger_index="7" type="combinatorial"/>
            <node data_index="6" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[4]" storage_index="6" tap_mode="classic" trigger_index="6" type="combinatorial"/>
            <node data_index="5" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[3]" storage_index="5" tap_mode="classic" trigger_index="5" type="combinatorial"/>
            <node data_index="4" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[2]" storage_index="4" tap_mode="classic" trigger_index="4" type="combinatorial"/>
            <node data_index="3" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[1]" storage_index="3" tap_mode="classic" trigger_index="3" type="combinatorial"/>
            <node data_index="2" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[0]" storage_index="2" tap_mode="classic" trigger_index="2" type="combinatorial"/>
          </node>
          <node mnemonics="state_table" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state" order="lsb_to_msb" radix="mnemonics" type="state machine">
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE2" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE3" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CLR_BREAKPOINT" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_HOLD" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_INVALID_MSG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_LISTENING" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_PC_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_READBACK_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RESET" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES_SAVE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SET_BREAKPOINT" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SYSTEM_ID_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_MODULE_ID" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_STATE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PROCESS_MSG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DONE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DROP_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_DATA" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_MSG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DONE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DROP_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_DATA" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_MSG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DONE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DONE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DROP_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_REQ" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_DATA" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_MSG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_REQUEST_DATA" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_ADDR" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_SIZE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SEND" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SEND_REFRESH_NOTICE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_COND_DONE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_CONFIG_AND_OR" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_AND_OR" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_ADDR" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_DATA" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_OPCODE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_MODULE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_STATE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_UPDATE_PC" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_START" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_PERFORM_WRITE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_RECV_TAG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_PERFORM_WRITE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_RECV_TAG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_PERFORM_WRITE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_RECV_TAG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_PERFORM_WRITE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_RECV_TAG" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_CHECK" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_SAVE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_CHECK" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WAIT" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE_DONE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE2" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE3" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE2" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE3" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_PERFORM_WRITE" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_ADDR" tap_mode="classic" type="state machine"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_DATA" tap_mode="classic" type="state machine"/>
          </node>
          <node name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0..7]" order="lsb_to_msb" type="combinatorial">
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[1]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[2]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[3]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[4]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[5]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[6]" tap_mode="classic" type="combinatorial"/>
            <node is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[7]" tap_mode="classic" type="combinatorial"/>
          </node>
        </unified_setup_data_view>
        <data_view>
          <net data_index="94" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|program_running_r" storage_index="94" tap_mode="classic" trigger_index="94" type="combinatorial"/>
          <bus name="top:top_inst|dbg_active_instance" order="msb_to_lsb" radix="unsigned_dec" type="combinatorial">
            <net data_index="1" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_active_instance[1]" storage_index="1" tap_mode="classic" trigger_index="1" type="combinatorial"/>
            <net data_index="0" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_active_instance[0]" storage_index="0" tap_mode="classic" trigger_index="0" type="combinatorial"/>
          </bus>
          <bus name="top:top_inst|dbg_current_state" order="msb_to_lsb" radix="unsigned_dec" type="combinatorial">
            <net data_index="8" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[6]" storage_index="8" tap_mode="classic" trigger_index="8" type="combinatorial"/>
            <net data_index="7" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[5]" storage_index="7" tap_mode="classic" trigger_index="7" type="combinatorial"/>
            <net data_index="6" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[4]" storage_index="6" tap_mode="classic" trigger_index="6" type="combinatorial"/>
            <net data_index="5" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[3]" storage_index="5" tap_mode="classic" trigger_index="5" type="combinatorial"/>
            <net data_index="4" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[2]" storage_index="4" tap_mode="classic" trigger_index="4" type="combinatorial"/>
            <net data_index="3" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[1]" storage_index="3" tap_mode="classic" trigger_index="3" type="combinatorial"/>
            <net data_index="2" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[0]" storage_index="2" tap_mode="classic" trigger_index="2" type="combinatorial"/>
          </bus>
          <bus mnemonics="state_table" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state" order="lsb_to_msb" radix="mnemonics" type="state machine">
            <net data_index="17" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE" storage_index="17" tap_mode="classic" trigger_index="17" type="state machine"/>
            <net data_index="18" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE2" storage_index="18" tap_mode="classic" trigger_index="18" type="state machine"/>
            <net data_index="19" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE3" storage_index="19" tap_mode="classic" trigger_index="19" type="state machine"/>
            <net data_index="20" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CLR_BREAKPOINT" storage_index="20" tap_mode="classic" trigger_index="20" type="state machine"/>
            <net data_index="21" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_HOLD" storage_index="21" tap_mode="classic" trigger_index="21" type="state machine"/>
            <net data_index="22" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_INVALID_MSG" storage_index="22" tap_mode="classic" trigger_index="22" type="state machine"/>
            <net data_index="23" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_LISTENING" storage_index="23" tap_mode="classic" trigger_index="23" type="state machine"/>
            <net data_index="24" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_PC_REQ" storage_index="24" tap_mode="classic" trigger_index="24" type="state machine"/>
            <net data_index="25" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_READBACK_REQ" storage_index="25" tap_mode="classic" trigger_index="25" type="state machine"/>
            <net data_index="26" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RESET" storage_index="26" tap_mode="classic" trigger_index="26" type="state machine"/>
            <net data_index="27" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN" storage_index="27" tap_mode="classic" trigger_index="27" type="state machine"/>
            <net data_index="28" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES" storage_index="28" tap_mode="classic" trigger_index="28" type="state machine"/>
            <net data_index="29" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES_SAVE" storage_index="29" tap_mode="classic" trigger_index="29" type="state machine"/>
            <net data_index="30" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SET_BREAKPOINT" storage_index="30" tap_mode="classic" trigger_index="30" type="state machine"/>
            <net data_index="31" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SYSTEM_ID_REQ" storage_index="31" tap_mode="classic" trigger_index="31" type="state machine"/>
            <net data_index="32" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_MODULE_ID" storage_index="32" tap_mode="classic" trigger_index="32" type="state machine"/>
            <net data_index="33" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_STATE" storage_index="33" tap_mode="classic" trigger_index="33" type="state machine"/>
            <net data_index="34" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PROCESS_MSG" storage_index="34" tap_mode="classic" trigger_index="34" type="state machine"/>
            <net data_index="35" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DONE" storage_index="35" tap_mode="classic" trigger_index="35" type="state machine"/>
            <net data_index="36" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DROP_REQ" storage_index="36" tap_mode="classic" trigger_index="36" type="state machine"/>
            <net data_index="37" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_REQ" storage_index="37" tap_mode="classic" trigger_index="37" type="state machine"/>
            <net data_index="38" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_DATA" storage_index="38" tap_mode="classic" trigger_index="38" type="state machine"/>
            <net data_index="39" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_MSG" storage_index="39" tap_mode="classic" trigger_index="39" type="state machine"/>
            <net data_index="40" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DONE" storage_index="40" tap_mode="classic" trigger_index="40" type="state machine"/>
            <net data_index="41" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DROP_REQ" storage_index="41" tap_mode="classic" trigger_index="41" type="state machine"/>
            <net data_index="42" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_REQ" storage_index="42" tap_mode="classic" trigger_index="42" type="state machine"/>
            <net data_index="43" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_DATA" storage_index="43" tap_mode="classic" trigger_index="43" type="state machine"/>
            <net data_index="44" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_MSG" storage_index="44" tap_mode="classic" trigger_index="44" type="state machine"/>
            <net data_index="45" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DONE" storage_index="45" tap_mode="classic" trigger_index="45" type="state machine"/>
            <net data_index="46" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DONE" storage_index="46" tap_mode="classic" trigger_index="46" type="state machine"/>
            <net data_index="47" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DROP_REQ" storage_index="47" tap_mode="classic" trigger_index="47" type="state machine"/>
            <net data_index="48" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_REQ" storage_index="48" tap_mode="classic" trigger_index="48" type="state machine"/>
            <net data_index="49" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_DATA" storage_index="49" tap_mode="classic" trigger_index="49" type="state machine"/>
            <net data_index="50" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_MSG" storage_index="50" tap_mode="classic" trigger_index="50" type="state machine"/>
            <net data_index="51" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM" storage_index="51" tap_mode="classic" trigger_index="51" type="state machine"/>
            <net data_index="52" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_REQUEST_DATA" storage_index="52" tap_mode="classic" trigger_index="52" type="state machine"/>
            <net data_index="53" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_ADDR" storage_index="53" tap_mode="classic" trigger_index="53" type="state machine"/>
            <net data_index="54" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_SIZE" storage_index="54" tap_mode="classic" trigger_index="54" type="state machine"/>
            <net data_index="55" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SEND" storage_index="55" tap_mode="classic" trigger_index="55" type="state machine"/>
            <net data_index="56" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SEND_REFRESH_NOTICE" storage_index="56" tap_mode="classic" trigger_index="56" type="state machine"/>
            <net data_index="57" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_COND_DONE" storage_index="57" tap_mode="classic" trigger_index="57" type="state machine"/>
            <net data_index="58" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_CONFIG_AND_OR" storage_index="58" tap_mode="classic" trigger_index="58" type="state machine"/>
            <net data_index="59" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_AND_OR" storage_index="59" tap_mode="classic" trigger_index="59" type="state machine"/>
            <net data_index="60" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_ADDR" storage_index="60" tap_mode="classic" trigger_index="60" type="state machine"/>
            <net data_index="61" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_DATA" storage_index="61" tap_mode="classic" trigger_index="61" type="state machine"/>
            <net data_index="62" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_OPCODE" storage_index="62" tap_mode="classic" trigger_index="62" type="state machine"/>
            <net data_index="63" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_MODULE" storage_index="63" tap_mode="classic" trigger_index="63" type="state machine"/>
            <net data_index="64" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" storage_index="64" tap_mode="classic" trigger_index="64" type="state machine"/>
            <net data_index="65" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_STATE" storage_index="65" tap_mode="classic" trigger_index="65" type="state machine"/>
            <net data_index="66" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" storage_index="66" tap_mode="classic" trigger_index="66" type="state machine"/>
            <net data_index="67" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_UPDATE_PC" storage_index="67" tap_mode="classic" trigger_index="67" type="state machine"/>
            <net data_index="68" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_START" storage_index="68" tap_mode="classic" trigger_index="68" type="state machine"/>
            <net data_index="69" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_PERFORM_WRITE" storage_index="69" tap_mode="classic" trigger_index="69" type="state machine"/>
            <net data_index="70" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_RECV_TAG" storage_index="70" tap_mode="classic" trigger_index="70" type="state machine"/>
            <net data_index="71" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_PERFORM_WRITE" storage_index="71" tap_mode="classic" trigger_index="71" type="state machine"/>
            <net data_index="72" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_RECV_TAG" storage_index="72" tap_mode="classic" trigger_index="72" type="state machine"/>
            <net data_index="73" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_PERFORM_WRITE" storage_index="73" tap_mode="classic" trigger_index="73" type="state machine"/>
            <net data_index="74" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_RECV_TAG" storage_index="74" tap_mode="classic" trigger_index="74" type="state machine"/>
            <net data_index="75" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_PERFORM_WRITE" storage_index="75" tap_mode="classic" trigger_index="75" type="state machine"/>
            <net data_index="76" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_RECV_TAG" storage_index="76" tap_mode="classic" trigger_index="76" type="state machine"/>
            <net data_index="77" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV" storage_index="77" tap_mode="classic" trigger_index="77" type="state machine"/>
            <net data_index="78" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_CHECK" storage_index="78" tap_mode="classic" trigger_index="78" type="state machine"/>
            <net data_index="79" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_SAVE" storage_index="79" tap_mode="classic" trigger_index="79" type="state machine"/>
            <net data_index="80" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND" storage_index="80" tap_mode="classic" trigger_index="80" type="state machine"/>
            <net data_index="81" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_CHECK" storage_index="81" tap_mode="classic" trigger_index="81" type="state machine"/>
            <net data_index="82" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WAIT" storage_index="82" tap_mode="classic" trigger_index="82" type="state machine"/>
            <net data_index="83" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE" storage_index="83" tap_mode="classic" trigger_index="83" type="state machine"/>
            <net data_index="84" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE_DONE" storage_index="84" tap_mode="classic" trigger_index="84" type="state machine"/>
            <net data_index="85" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE" storage_index="85" tap_mode="classic" trigger_index="85" type="state machine"/>
            <net data_index="86" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE2" storage_index="86" tap_mode="classic" trigger_index="86" type="state machine"/>
            <net data_index="87" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE3" storage_index="87" tap_mode="classic" trigger_index="87" type="state machine"/>
            <net data_index="88" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE" storage_index="88" tap_mode="classic" trigger_index="88" type="state machine"/>
            <net data_index="89" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE2" storage_index="89" tap_mode="classic" trigger_index="89" type="state machine"/>
            <net data_index="90" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE3" storage_index="90" tap_mode="classic" trigger_index="90" type="state machine"/>
            <net data_index="91" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_PERFORM_WRITE" storage_index="91" tap_mode="classic" trigger_index="91" type="state machine"/>
            <net data_index="92" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_ADDR" storage_index="92" tap_mode="classic" trigger_index="92" type="state machine"/>
            <net data_index="93" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_DATA" storage_index="93" tap_mode="classic" trigger_index="93" type="state machine"/>
          </bus>
          <bus name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0..7]" order="lsb_to_msb" type="combinatorial">
            <net data_index="9" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0]" storage_index="9" tap_mode="classic" trigger_index="9" type="combinatorial"/>
            <net data_index="10" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[1]" storage_index="10" tap_mode="classic" trigger_index="10" type="combinatorial"/>
            <net data_index="11" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[2]" storage_index="11" tap_mode="classic" trigger_index="11" type="combinatorial"/>
            <net data_index="12" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[3]" storage_index="12" tap_mode="classic" trigger_index="12" type="combinatorial"/>
            <net data_index="13" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[4]" storage_index="13" tap_mode="classic" trigger_index="13" type="combinatorial"/>
            <net data_index="14" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[5]" storage_index="14" tap_mode="classic" trigger_index="14" type="combinatorial"/>
            <net data_index="15" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[6]" storage_index="15" tap_mode="classic" trigger_index="15" type="combinatorial"/>
            <net data_index="16" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[7]" storage_index="16" tap_mode="classic" trigger_index="16" type="combinatorial"/>
          </bus>
        </data_view>
        <setup_view>
          <net data_index="94" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|program_running_r" storage_index="94" tap_mode="classic" trigger_index="94" type="combinatorial"/>
          <bus name="top:top_inst|dbg_active_instance" order="msb_to_lsb" radix="unsigned_dec" type="combinatorial">
            <net data_index="1" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_active_instance[1]" storage_index="1" tap_mode="classic" trigger_index="1" type="combinatorial"/>
            <net data_index="0" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_active_instance[0]" storage_index="0" tap_mode="classic" trigger_index="0" type="combinatorial"/>
          </bus>
          <bus name="top:top_inst|dbg_current_state" order="msb_to_lsb" radix="unsigned_dec" type="combinatorial">
            <net data_index="8" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[6]" storage_index="8" tap_mode="classic" trigger_index="8" type="combinatorial"/>
            <net data_index="7" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[5]" storage_index="7" tap_mode="classic" trigger_index="7" type="combinatorial"/>
            <net data_index="6" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[4]" storage_index="6" tap_mode="classic" trigger_index="6" type="combinatorial"/>
            <net data_index="5" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[3]" storage_index="5" tap_mode="classic" trigger_index="5" type="combinatorial"/>
            <net data_index="4" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[2]" storage_index="4" tap_mode="classic" trigger_index="4" type="combinatorial"/>
            <net data_index="3" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[1]" storage_index="3" tap_mode="classic" trigger_index="3" type="combinatorial"/>
            <net data_index="2" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|dbg_current_state[0]" storage_index="2" tap_mode="classic" trigger_index="2" type="combinatorial"/>
          </bus>
          <bus mnemonics="state_table" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state" order="lsb_to_msb" radix="mnemonics" type="state machine">
            <net data_index="17" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE" storage_index="17" tap_mode="classic" trigger_index="17" type="state machine"/>
            <net data_index="18" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE2" storage_index="18" tap_mode="classic" trigger_index="18" type="state machine"/>
            <net data_index="19" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CHECK_FOR_MESSAGE3" storage_index="19" tap_mode="classic" trigger_index="19" type="state machine"/>
            <net data_index="20" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_CLR_BREAKPOINT" storage_index="20" tap_mode="classic" trigger_index="20" type="state machine"/>
            <net data_index="21" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_HOLD" storage_index="21" tap_mode="classic" trigger_index="21" type="state machine"/>
            <net data_index="22" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_INVALID_MSG" storage_index="22" tap_mode="classic" trigger_index="22" type="state machine"/>
            <net data_index="23" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_LISTENING" storage_index="23" tap_mode="classic" trigger_index="23" type="state machine"/>
            <net data_index="24" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_PC_REQ" storage_index="24" tap_mode="classic" trigger_index="24" type="state machine"/>
            <net data_index="25" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_READBACK_REQ" storage_index="25" tap_mode="classic" trigger_index="25" type="state machine"/>
            <net data_index="26" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RESET" storage_index="26" tap_mode="classic" trigger_index="26" type="state machine"/>
            <net data_index="27" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN" storage_index="27" tap_mode="classic" trigger_index="27" type="state machine"/>
            <net data_index="28" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES" storage_index="28" tap_mode="classic" trigger_index="28" type="state machine"/>
            <net data_index="29" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_RUN_FOR_CYCLES_SAVE" storage_index="29" tap_mode="classic" trigger_index="29" type="state machine"/>
            <net data_index="30" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SET_BREAKPOINT" storage_index="30" tap_mode="classic" trigger_index="30" type="state machine"/>
            <net data_index="31" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_MSG_SYSTEM_ID_REQ" storage_index="31" tap_mode="classic" trigger_index="31" type="state machine"/>
            <net data_index="32" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_MODULE_ID" storage_index="32" tap_mode="classic" trigger_index="32" type="state machine"/>
            <net data_index="33" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PC_SEND_STATE" storage_index="33" tap_mode="classic" trigger_index="33" type="state machine"/>
            <net data_index="34" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_PROCESS_MSG" storage_index="34" tap_mode="classic" trigger_index="34" type="state machine"/>
            <net data_index="35" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DONE" storage_index="35" tap_mode="classic" trigger_index="35" type="state machine"/>
            <net data_index="36" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_DROP_REQ" storage_index="36" tap_mode="classic" trigger_index="36" type="state machine"/>
            <net data_index="37" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_REQ" storage_index="37" tap_mode="classic" trigger_index="37" type="state machine"/>
            <net data_index="38" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_DATA" storage_index="38" tap_mode="classic" trigger_index="38" type="state machine"/>
            <net data_index="39" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_CONTROL_SEND_MSG" storage_index="39" tap_mode="classic" trigger_index="39" type="state machine"/>
            <net data_index="40" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DONE" storage_index="40" tap_mode="classic" trigger_index="40" type="state machine"/>
            <net data_index="41" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_DROP_REQ" storage_index="41" tap_mode="classic" trigger_index="41" type="state machine"/>
            <net data_index="42" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_REQ" storage_index="42" tap_mode="classic" trigger_index="42" type="state machine"/>
            <net data_index="43" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_DATA" storage_index="43" tap_mode="classic" trigger_index="43" type="state machine"/>
            <net data_index="44" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DATA_SEND_MSG" storage_index="44" tap_mode="classic" trigger_index="44" type="state machine"/>
            <net data_index="45" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_DONE" storage_index="45" tap_mode="classic" trigger_index="45" type="state machine"/>
            <net data_index="46" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DONE" storage_index="46" tap_mode="classic" trigger_index="46" type="state machine"/>
            <net data_index="47" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_DROP_REQ" storage_index="47" tap_mode="classic" trigger_index="47" type="state machine"/>
            <net data_index="48" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_REQ" storage_index="48" tap_mode="classic" trigger_index="48" type="state machine"/>
            <net data_index="49" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_DATA" storage_index="49" tap_mode="classic" trigger_index="49" type="state machine"/>
            <net data_index="50" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READBACK_REGS_SEND_MSG" storage_index="50" tap_mode="classic" trigger_index="50" type="state machine"/>
            <net data_index="51" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM" storage_index="51" tap_mode="classic" trigger_index="51" type="state machine"/>
            <net data_index="52" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_REQUEST_DATA" storage_index="52" tap_mode="classic" trigger_index="52" type="state machine"/>
            <net data_index="53" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_ADDR" storage_index="53" tap_mode="classic" trigger_index="53" type="state machine"/>
            <net data_index="54" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SAVE_SIZE" storage_index="54" tap_mode="classic" trigger_index="54" type="state machine"/>
            <net data_index="55" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_READ_MEM_SEND" storage_index="55" tap_mode="classic" trigger_index="55" type="state machine"/>
            <net data_index="56" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SEND_REFRESH_NOTICE" storage_index="56" tap_mode="classic" trigger_index="56" type="state machine"/>
            <net data_index="57" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_COND_DONE" storage_index="57" tap_mode="classic" trigger_index="57" type="state machine"/>
            <net data_index="58" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_CONFIG_AND_OR" storage_index="58" tap_mode="classic" trigger_index="58" type="state machine"/>
            <net data_index="59" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_AND_OR" storage_index="59" tap_mode="classic" trigger_index="59" type="state machine"/>
            <net data_index="60" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_ADDR" storage_index="60" tap_mode="classic" trigger_index="60" type="state machine"/>
            <net data_index="61" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_DATA" storage_index="61" tap_mode="classic" trigger_index="61" type="state machine"/>
            <net data_index="62" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_COND_OPCODE" storage_index="62" tap_mode="classic" trigger_index="62" type="state machine"/>
            <net data_index="63" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_MODULE" storage_index="63" tap_mode="classic" trigger_index="63" type="state machine"/>
            <net data_index="64" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" storage_index="64" tap_mode="classic" trigger_index="64" type="state machine"/>
            <net data_index="65" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_RECV_STATE" storage_index="65" tap_mode="classic" trigger_index="65" type="state machine"/>
            <net data_index="66" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" storage_index="66" tap_mode="classic" trigger_index="66" type="state machine"/>
            <net data_index="67" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_SET_BREAKPOINT_UPDATE_PC" storage_index="67" tap_mode="classic" trigger_index="67" type="state machine"/>
            <net data_index="68" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_START" storage_index="68" tap_mode="classic" trigger_index="68" type="state machine"/>
            <net data_index="69" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_PERFORM_WRITE" storage_index="69" tap_mode="classic" trigger_index="69" type="state machine"/>
            <net data_index="70" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_DISABLE_RECV_TAG" storage_index="70" tap_mode="classic" trigger_index="70" type="state machine"/>
            <net data_index="71" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_PERFORM_WRITE" storage_index="71" tap_mode="classic" trigger_index="71" type="state machine"/>
            <net data_index="72" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_MODULE_ENABLE_RECV_TAG" storage_index="72" tap_mode="classic" trigger_index="72" type="state machine"/>
            <net data_index="73" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_PERFORM_WRITE" storage_index="73" tap_mode="classic" trigger_index="73" type="state machine"/>
            <net data_index="74" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_DISABLE_RECV_TAG" storage_index="74" tap_mode="classic" trigger_index="74" type="state machine"/>
            <net data_index="75" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_PERFORM_WRITE" storage_index="75" tap_mode="classic" trigger_index="75" type="state machine"/>
            <net data_index="76" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_TRACE_VAR_ENABLE_RECV_TAG" storage_index="76" tap_mode="classic" trigger_index="76" type="state machine"/>
            <net data_index="77" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV" storage_index="77" tap_mode="classic" trigger_index="77" type="state machine"/>
            <net data_index="78" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_CHECK" storage_index="78" tap_mode="classic" trigger_index="78" type="state machine"/>
            <net data_index="79" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_RECV_SAVE" storage_index="79" tap_mode="classic" trigger_index="79" type="state machine"/>
            <net data_index="80" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND" storage_index="80" tap_mode="classic" trigger_index="80" type="state machine"/>
            <net data_index="81" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_CHECK" storage_index="81" tap_mode="classic" trigger_index="81" type="state machine"/>
            <net data_index="82" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WAIT" storage_index="82" tap_mode="classic" trigger_index="82" type="state machine"/>
            <net data_index="83" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE" storage_index="83" tap_mode="classic" trigger_index="83" type="state machine"/>
            <net data_index="84" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_UART_SEND_WRITE_DONE" storage_index="84" tap_mode="classic" trigger_index="84" type="state machine"/>
            <net data_index="85" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE" storage_index="85" tap_mode="classic" trigger_index="85" type="state machine"/>
            <net data_index="86" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE2" storage_index="86" tap_mode="classic" trigger_index="86" type="state machine"/>
            <net data_index="87" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_MESSAGE3" storage_index="87" tap_mode="classic" trigger_index="87" type="state machine"/>
            <net data_index="88" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE" storage_index="88" tap_mode="classic" trigger_index="88" type="state machine"/>
            <net data_index="89" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE2" storage_index="89" tap_mode="classic" trigger_index="89" type="state machine"/>
            <net data_index="90" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WAIT_FOR_WRITE_SPACE3" storage_index="90" tap_mode="classic" trigger_index="90" type="state machine"/>
            <net data_index="91" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_PERFORM_WRITE" storage_index="91" tap_mode="classic" trigger_index="91" type="state machine"/>
            <net data_index="92" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_ADDR" storage_index="92" tap_mode="classic" trigger_index="92" type="state machine"/>
            <net data_index="93" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|state.S_WRITE_MEM_RECV_DATA" storage_index="93" tap_mode="classic" trigger_index="93" type="state machine"/>
          </bus>
          <bus name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0..7]" order="lsb_to_msb" type="combinatorial">
            <net data_index="9" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[0]" storage_index="9" tap_mode="classic" trigger_index="9" type="combinatorial"/>
            <net data_index="10" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[1]" storage_index="10" tap_mode="classic" trigger_index="10" type="combinatorial"/>
            <net data_index="11" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[2]" storage_index="11" tap_mode="classic" trigger_index="11" type="combinatorial"/>
            <net data_index="12" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[3]" storage_index="12" tap_mode="classic" trigger_index="12" type="combinatorial"/>
            <net data_index="13" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[4]" storage_index="13" tap_mode="classic" trigger_index="13" type="combinatorial"/>
            <net data_index="14" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[5]" storage_index="14" tap_mode="classic" trigger_index="14" type="combinatorial"/>
            <net data_index="15" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[6]" storage_index="15" tap_mode="classic" trigger_index="15" type="combinatorial"/>
            <net data_index="16" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="top:top_inst|hlsd:hlsd_inst|comm:comm_inst|rs232_readdata[7]" storage_index="16" tap_mode="classic" trigger_index="16" type="combinatorial"/>
          </bus>
        </setup_view>
        <trigger_in_editor/>
        <trigger_out_editor/>
      </presentation>
      <trigger attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2015/03/10 14:07:38  #1" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="1" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="true" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
            <pwr_up_transitional>11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
      </trigger>
    </signal_set>
  </instance>
  <mnemonics>
    <table name="state_table" width="77">
      <symbol name="S_CHECK_FOR_MESSAGE" value="00000000000000000000000000000000000000000000000000000000000000000000000000001"/>
      <symbol name="S_CHECK_FOR_MESSAGE2" value="00000000000000000000000000000000000000000000000000000000000000000000000000010"/>
      <symbol name="S_CHECK_FOR_MESSAGE3" value="00000000000000000000000000000000000000000000000000000000000000000000000000100"/>
      <symbol name="S_CLR_BREAKPOINT" value="00000000000000000000000000000000000000000000000000000000000000000000000001000"/>
      <symbol name="S_HOLD" value="00000000000000000000000000000000000000000000000000000000000000000000000010000"/>
      <symbol name="S_INVALID_MSG" value="00000000000000000000000000000000000000000000000000000000000000000000000100000"/>
      <symbol name="S_LISTENING" value="00000000000000000000000000000000000000000000000000000000000000000000001000000"/>
      <symbol name="S_MSG_PC_REQ" value="00000000000000000000000000000000000000000000000000000000000000000000010000000"/>
      <symbol name="S_MSG_READBACK_REQ" value="00000000000000000000000000000000000000000000000000000000000000000000100000000"/>
      <symbol name="S_MSG_RESET" value="00000000000000000000000000000000000000000000000000000000000000000001000000000"/>
      <symbol name="S_MSG_RUN" value="00000000000000000000000000000000000000000000000000000000000000000010000000000"/>
      <symbol name="S_MSG_RUN_FOR_CYCLES" value="00000000000000000000000000000000000000000000000000000000000000000100000000000"/>
      <symbol name="S_MSG_RUN_FOR_CYCLES_SAVE" value="00000000000000000000000000000000000000000000000000000000000000001000000000000"/>
      <symbol name="S_MSG_SET_BREAKPOINT" value="00000000000000000000000000000000000000000000000000000000000000010000000000000"/>
      <symbol name="S_MSG_SYSTEM_ID_REQ" value="00000000000000000000000000000000000000000000000000000000000000100000000000000"/>
      <symbol name="S_PC_SEND_MODULE_ID" value="00000000000000000000000000000000000000000000000000000000000001000000000000000"/>
      <symbol name="S_PC_SEND_STATE" value="00000000000000000000000000000000000000000000000000000000000010000000000000000"/>
      <symbol name="S_PROCESS_MSG" value="00000000000000000000000000000000000000000000000000000000000100000000000000000"/>
      <symbol name="S_READBACK_CONTROL_DONE" value="00000000000000000000000000000000000000000000000000000000001000000000000000000"/>
      <symbol name="S_READBACK_CONTROL_DROP_REQ" value="00000000000000000000000000000000000000000000000000000000010000000000000000000"/>
      <symbol name="S_READBACK_CONTROL_REQ" value="00000000000000000000000000000000000000000000000000000000100000000000000000000"/>
      <symbol name="S_READBACK_CONTROL_SEND_DATA" value="00000000000000000000000000000000000000000000000000000001000000000000000000000"/>
      <symbol name="S_READBACK_CONTROL_SEND_MSG" value="00000000000000000000000000000000000000000000000000000010000000000000000000000"/>
      <symbol name="S_READBACK_DATA_DONE" value="00000000000000000000000000000000000000000000000000000100000000000000000000000"/>
      <symbol name="S_READBACK_DATA_DROP_REQ" value="00000000000000000000000000000000000000000000000000001000000000000000000000000"/>
      <symbol name="S_READBACK_DATA_REQ" value="00000000000000000000000000000000000000000000000000010000000000000000000000000"/>
      <symbol name="S_READBACK_DATA_SEND_DATA" value="00000000000000000000000000000000000000000000000000100000000000000000000000000"/>
      <symbol name="S_READBACK_DATA_SEND_MSG" value="00000000000000000000000000000000000000000000000001000000000000000000000000000"/>
      <symbol name="S_READBACK_DONE" value="00000000000000000000000000000000000000000000000010000000000000000000000000000"/>
      <symbol name="S_READBACK_REGS_DONE" value="00000000000000000000000000000000000000000000000100000000000000000000000000000"/>
      <symbol name="S_READBACK_REGS_DROP_REQ" value="00000000000000000000000000000000000000000000001000000000000000000000000000000"/>
      <symbol name="S_READBACK_REGS_REQ" value="00000000000000000000000000000000000000000000010000000000000000000000000000000"/>
      <symbol name="S_READBACK_REGS_SEND_DATA" value="00000000000000000000000000000000000000000000100000000000000000000000000000000"/>
      <symbol name="S_READBACK_REGS_SEND_MSG" value="00000000000000000000000000000000000000000001000000000000000000000000000000000"/>
      <symbol name="S_READ_MEM" value="00000000000000000000000000000000000000000010000000000000000000000000000000000"/>
      <symbol name="S_READ_MEM_REQUEST_DATA" value="00000000000000000000000000000000000000000100000000000000000000000000000000000"/>
      <symbol name="S_READ_MEM_SAVE_ADDR" value="00000000000000000000000000000000000000001000000000000000000000000000000000000"/>
      <symbol name="S_READ_MEM_SAVE_SIZE" value="00000000000000000000000000000000000000010000000000000000000000000000000000000"/>
      <symbol name="S_READ_MEM_SEND" value="00000000000000000000000000000000000000100000000000000000000000000000000000000"/>
      <symbol name="S_SEND_REFRESH_NOTICE" value="00000000000000000000000000000000000001000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_COND_DONE" value="00000000000000000000000000000000000010000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_CONFIG_AND_OR" value="00000000000000000000000000000000000100000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_AND_OR" value="00000000000000000000000000000000001000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_COND_ADDR" value="00000000000000000000000000000000010000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_COND_DATA" value="00000000000000000000000000000000100000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_COND_OPCODE" value="00000000000000000000000000000001000000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_MODULE" value="00000000000000000000000000000010000000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_NUM_CONDITIONS" value="00000000000000000000000000000100000000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_RECV_STATE" value="00000000000000000000000000001000000000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_SAVE_NUM_CONDITIONS" value="00000000000000000000000000010000000000000000000000000000000000000000000000000"/>
      <symbol name="S_SET_BREAKPOINT_UPDATE_PC" value="00000000000000000000000000100000000000000000000000000000000000000000000000000"/>
      <symbol name="S_START" value="00000000000000000000000001000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_MODULE_DISABLE_PERFORM_WRITE" value="00000000000000000000000010000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_MODULE_DISABLE_RECV_TAG" value="00000000000000000000000100000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_MODULE_ENABLE_PERFORM_WRITE" value="00000000000000000000001000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_MODULE_ENABLE_RECV_TAG" value="00000000000000000000010000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_VAR_DISABLE_PERFORM_WRITE" value="00000000000000000000100000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_VAR_DISABLE_RECV_TAG" value="00000000000000000001000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_VAR_ENABLE_PERFORM_WRITE" value="00000000000000000010000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_TRACE_VAR_ENABLE_RECV_TAG" value="00000000000000000100000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_RECV" value="00000000000000001000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_RECV_CHECK" value="00000000000000010000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_RECV_SAVE" value="00000000000000100000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_SEND" value="00000000000001000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_SEND_CHECK" value="00000000000010000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_SEND_WAIT" value="00000000000100000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_SEND_WRITE" value="00000000001000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_UART_SEND_WRITE_DONE" value="00000000010000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WAIT_FOR_MESSAGE" value="00000000100000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WAIT_FOR_MESSAGE2" value="00000001000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WAIT_FOR_MESSAGE3" value="00000010000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WAIT_FOR_WRITE_SPACE" value="00000100000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WAIT_FOR_WRITE_SPACE2" value="00001000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WAIT_FOR_WRITE_SPACE3" value="00010000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WRITE_MEM_PERFORM_WRITE" value="00100000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WRITE_MEM_RECV_ADDR" value="01000000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <symbol name="S_WRITE_MEM_RECV_DATA" value="10000000000000000000000000000000000000000000000000000000000000000000000000000"/>
    </table>
  </mnemonics>
</session>
