//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Mon Jan 21 23:17:46 2013
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Thu Feb 21 23:15:45 2013
//----------------------------------------------------------------------------//

Start Function: sha_update
state: LEGUP_0
   Transition: if (start): LEGUP_F_sha_update_BB_0_1 default: LEGUP_0
state: LEGUP_F_sha_update_BB_0_1
   %1 = load i32* @sha_info_count_lo, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB_0_3)
   %3 = load i32* @sha_info_count_hi, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB_0_3)
   Transition: default: LEGUP_F_sha_update_BB_0_2
state: LEGUP_F_sha_update_BB_0_2
   Transition: default: LEGUP_F_sha_update_BB_0_3
state: LEGUP_F_sha_update_BB_0_3
   %2 = icmp ugt i32 %1, -65537 (endState: LEGUP_F_sha_update_BB_0_3)
   br i1 %2, label %4, label %.preheader.lr.ph
   Transition: if (%2): LEGUP_F_sha_update_BB_4_4 default: LEGUP_F_sha_update_BB__preheader_lr_ph_6
state: LEGUP_F_sha_update_BB_4_4
   %5 = add i32 %3, 1 (endState: LEGUP_F_sha_update_BB_4_4)
   Transition: default: LEGUP_F_sha_update_BB_4_5
state: LEGUP_F_sha_update_BB_4_5
   store i32 %5, i32* @sha_info_count_hi, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB_4_5)
   br label %.preheader.lr.ph
   Transition: default: LEGUP_F_sha_update_BB__preheader_lr_ph_6
state: LEGUP_F_sha_update_BB__preheader_lr_ph_6
   %6 = phi i32 [ %5, %4 ], [ %3, %0 ] (endState: LEGUP_F_sha_update_BB__preheader_lr_ph_6)
   %7 = add i32 %1, 65536 (endState: LEGUP_F_sha_update_BB__preheader_lr_ph_6)
   store i32 %6, i32* @sha_info_count_hi, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB__preheader_lr_ph_6)
   Transition: default: LEGUP_F_sha_update_BB__preheader_lr_ph_7
state: LEGUP_F_sha_update_BB__preheader_lr_ph_7
   store i32 %7, i32* @sha_info_count_lo, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB__preheader_lr_ph_7)
   br label %.preheader
   Transition: default: LEGUP_F_sha_update_BB__preheader_8
state: LEGUP_F_sha_update_BB__preheader_8
   %indvar = phi i32 [ 0, %.preheader.lr.ph ], [ %indvar.next, %memcpy.exit ] (endState: LEGUP_F_sha_update_BB__preheader_8)
   %tmp36 = shl i32 %indvar, 6 (endState: LEGUP_F_sha_update_BB__preheader_8)
   %tmp3851 = or i32 %tmp36, 1 (endState: LEGUP_F_sha_update_BB__preheader_8)
   %tmp4052 = or i32 %tmp36, 2 (endState: LEGUP_F_sha_update_BB__preheader_8)
   %tmp4253 = or i32 %tmp36, 3 (endState: LEGUP_F_sha_update_BB__preheader_8)
   %tmp45 = mul i32 %indvar, -64 (endState: LEGUP_F_sha_update_BB__preheader_8)
   %tmp47 = add i32 %tmp45, 8128 (endState: LEGUP_F_sha_update_BB__preheader_8)
   br label %8
   Transition: default: LEGUP_F_sha_update_BB_8_9
state: LEGUP_F_sha_update_BB_8_9
   %indvar.i = phi i32 [ %indvar.next.i, %8 ], [ 0, %.preheader ] (endState: LEGUP_F_sha_update_BB_8_9)
   %tmp35 = shl i32 %indvar.i, 2 (endState: LEGUP_F_sha_update_BB_8_9)
   %tmp37 = add i32 %tmp36, %tmp35 (endState: LEGUP_F_sha_update_BB_8_9)
   %tmp39 = add i32 %tmp3851, %tmp35 (endState: LEGUP_F_sha_update_BB_8_9)
   %tmp41 = add i32 %tmp4052, %tmp35 (endState: LEGUP_F_sha_update_BB_8_9)
   %tmp43 = add i32 %tmp4253, %tmp35 (endState: LEGUP_F_sha_update_BB_8_9)
   %p1.01.i = getelementptr [16 x i32]* @sha_info_data, i32 0, i32 %indvar.i (endState: LEGUP_F_sha_update_BB_8_9)
   %indvar.next.i = add i32 %indvar.i, 1 (endState: LEGUP_F_sha_update_BB_8_9)
   %exitcond24 = icmp eq i32 %indvar.next.i, 16 (endState: LEGUP_F_sha_update_BB_8_9)
   Transition: default: LEGUP_F_sha_update_BB_8_10
state: LEGUP_F_sha_update_BB_8_10
   %p2.02.i = getelementptr i8* %buffer, i32 %tmp37 (endState: LEGUP_F_sha_update_BB_8_10)
   %scevgep.i = getelementptr i8* %buffer, i32 %tmp39 (endState: LEGUP_F_sha_update_BB_8_10)
   %scevgep10.i = getelementptr i8* %buffer, i32 %tmp41 (endState: LEGUP_F_sha_update_BB_8_10)
   %scevgep12.i = getelementptr i8* %buffer, i32 %tmp43 (endState: LEGUP_F_sha_update_BB_8_10)
   %9 = load i8* %p2.02.i, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_8_12)
   %11 = load i8* %scevgep.i, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_8_12)
   Transition: default: LEGUP_F_sha_update_BB_8_11
state: LEGUP_F_sha_update_BB_8_11
   %14 = load i8* %scevgep10.i, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_8_13)
   %17 = load i8* %scevgep12.i, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_8_13)
   Transition: default: LEGUP_F_sha_update_BB_8_12
state: LEGUP_F_sha_update_BB_8_12
   %10 = zext i8 %9 to i32 (endState: LEGUP_F_sha_update_BB_8_12)
   %12 = zext i8 %11 to i32 (endState: LEGUP_F_sha_update_BB_8_12)
   %13 = shl nuw nsw i32 %12, 8 (endState: LEGUP_F_sha_update_BB_8_12)
   %20 = or i32 %13, %10 (endState: LEGUP_F_sha_update_BB_8_12)
   Transition: default: LEGUP_F_sha_update_BB_8_13
state: LEGUP_F_sha_update_BB_8_13
   %15 = zext i8 %14 to i32 (endState: LEGUP_F_sha_update_BB_8_13)
   %16 = shl nuw nsw i32 %15, 16 (endState: LEGUP_F_sha_update_BB_8_13)
   %18 = zext i8 %17 to i32 (endState: LEGUP_F_sha_update_BB_8_13)
   %19 = shl nuw i32 %18, 24 (endState: LEGUP_F_sha_update_BB_8_13)
   %21 = or i32 %20, %16 (endState: LEGUP_F_sha_update_BB_8_13)
   %22 = or i32 %21, %19 (endState: LEGUP_F_sha_update_BB_8_13)
   Transition: default: LEGUP_F_sha_update_BB_8_14
state: LEGUP_F_sha_update_BB_8_14
   store i32 %22, i32* %p1.01.i, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB_8_14)
   br i1 %exitcond24, label %memcpy.exit, label %8
   Transition: if (%exitcond24): LEGUP_F_sha_update_BB_memcpy_exit_15 default: LEGUP_F_sha_update_BB_8_9
state: LEGUP_F_sha_update_BB_memcpy_exit_15
   %23 = icmp sgt i32 %tmp47, 63 (endState: LEGUP_F_sha_update_BB_memcpy_exit_15)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_sha_update_BB_memcpy_exit_15)
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   tail call fastcc void @sha_transform() (endState: LEGUP_function_call_16)
   Transition: if (sha_transform_finish): LEGUP_F_sha_update_BB_memcpy_exit_17 default: LEGUP_function_call_16
state: LEGUP_F_sha_update_BB_memcpy_exit_17
   br i1 %23, label %.preheader, label %._crit_edge
   Transition: if (%23): LEGUP_F_sha_update_BB__preheader_8 default: LEGUP_F_sha_update_BB___crit_edge_18
state: LEGUP_F_sha_update_BB___crit_edge_18
   %tmp44 = add i32 %tmp36, 64 (endState: LEGUP_F_sha_update_BB___crit_edge_18)
   %24 = icmp sgt i32 %tmp47, 3 (endState: LEGUP_F_sha_update_BB___crit_edge_18)
   br i1 %24, label %.lr.ph.i, label %memcpy.exit14
   Transition: if (%24): LEGUP_F_sha_update_BB__lr_ph_i_19 default: LEGUP_F_sha_update_BB_memcpy_exit14_61
state: LEGUP_F_sha_update_BB__lr_ph_i_19
   %25 = sdiv i32 %tmp47, 4 (endState: LEGUP_F_sha_update_BB__lr_ph_i_51)
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_20
state: LEGUP_F_sha_update_BB__lr_ph_i_20
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_21
state: LEGUP_F_sha_update_BB__lr_ph_i_21
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_22
state: LEGUP_F_sha_update_BB__lr_ph_i_22
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_23
state: LEGUP_F_sha_update_BB__lr_ph_i_23
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_24
state: LEGUP_F_sha_update_BB__lr_ph_i_24
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_25
state: LEGUP_F_sha_update_BB__lr_ph_i_25
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_26
state: LEGUP_F_sha_update_BB__lr_ph_i_26
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_27
state: LEGUP_F_sha_update_BB__lr_ph_i_27
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_28
state: LEGUP_F_sha_update_BB__lr_ph_i_28
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_29
state: LEGUP_F_sha_update_BB__lr_ph_i_29
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_30
state: LEGUP_F_sha_update_BB__lr_ph_i_30
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_31
state: LEGUP_F_sha_update_BB__lr_ph_i_31
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_32
state: LEGUP_F_sha_update_BB__lr_ph_i_32
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_33
state: LEGUP_F_sha_update_BB__lr_ph_i_33
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_34
state: LEGUP_F_sha_update_BB__lr_ph_i_34
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_35
state: LEGUP_F_sha_update_BB__lr_ph_i_35
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_36
state: LEGUP_F_sha_update_BB__lr_ph_i_36
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_37
state: LEGUP_F_sha_update_BB__lr_ph_i_37
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_38
state: LEGUP_F_sha_update_BB__lr_ph_i_38
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_39
state: LEGUP_F_sha_update_BB__lr_ph_i_39
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_40
state: LEGUP_F_sha_update_BB__lr_ph_i_40
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_41
state: LEGUP_F_sha_update_BB__lr_ph_i_41
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_42
state: LEGUP_F_sha_update_BB__lr_ph_i_42
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_43
state: LEGUP_F_sha_update_BB__lr_ph_i_43
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_44
state: LEGUP_F_sha_update_BB__lr_ph_i_44
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_45
state: LEGUP_F_sha_update_BB__lr_ph_i_45
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_46
state: LEGUP_F_sha_update_BB__lr_ph_i_46
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_47
state: LEGUP_F_sha_update_BB__lr_ph_i_47
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_48
state: LEGUP_F_sha_update_BB__lr_ph_i_48
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_49
state: LEGUP_F_sha_update_BB__lr_ph_i_49
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_50
state: LEGUP_F_sha_update_BB__lr_ph_i_50
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_51
state: LEGUP_F_sha_update_BB__lr_ph_i_51
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_52
state: LEGUP_F_sha_update_BB__lr_ph_i_52
   %tmp.i = sub i32 0, %25 (endState: LEGUP_F_sha_update_BB__lr_ph_i_52)
   %tmp = icmp sgt i32 %tmp.i, -1 (endState: LEGUP_F_sha_update_BB__lr_ph_i_52)
   %smax = select i1 %tmp, i32 %tmp.i, i32 -1 (endState: LEGUP_F_sha_update_BB__lr_ph_i_52)
   Transition: default: LEGUP_F_sha_update_BB__lr_ph_i_53
state: LEGUP_F_sha_update_BB__lr_ph_i_53
   %tmp18 = add i32 %25, %smax (endState: LEGUP_F_sha_update_BB__lr_ph_i_53)
   %tmp19 = add i32 %tmp18, 1 (endState: LEGUP_F_sha_update_BB__lr_ph_i_53)
   br label %26
   Transition: default: LEGUP_F_sha_update_BB_26_54
state: LEGUP_F_sha_update_BB_26_54
   %indvar.i2 = phi i32 [ 0, %.lr.ph.i ], [ %indvar.next.i12, %26 ] (endState: LEGUP_F_sha_update_BB_26_54)
   %p1.01.i11 = getelementptr [16 x i32]* @sha_info_data, i32 0, i32 %indvar.i2 (endState: LEGUP_F_sha_update_BB_26_54)
   %tmp20 = shl i32 %indvar.i2, 2 (endState: LEGUP_F_sha_update_BB_26_54)
   %tmp2148 = or i32 %tmp20, 3 (endState: LEGUP_F_sha_update_BB_26_54)
   %scevgep.sum = add i32 %tmp44, %tmp2148 (endState: LEGUP_F_sha_update_BB_26_54)
   %tmp2249 = or i32 %tmp20, 2 (endState: LEGUP_F_sha_update_BB_26_54)
   %scevgep.sum1 = add i32 %tmp44, %tmp2249 (endState: LEGUP_F_sha_update_BB_26_54)
   %tmp2350 = or i32 %tmp20, 1 (endState: LEGUP_F_sha_update_BB_26_54)
   %scevgep.sum2 = add i32 %tmp44, %tmp2350 (endState: LEGUP_F_sha_update_BB_26_54)
   %scevgep.sum3 = add i32 %tmp44, %tmp20 (endState: LEGUP_F_sha_update_BB_26_54)
   %indvar.next.i12 = add i32 %indvar.i2, 1 (endState: LEGUP_F_sha_update_BB_26_54)
   %exitcond = icmp eq i32 %indvar.next.i12, %tmp19 (endState: LEGUP_F_sha_update_BB_26_54)
   Transition: default: LEGUP_F_sha_update_BB_26_55
state: LEGUP_F_sha_update_BB_26_55
   %scevgep12.i10 = getelementptr i8* %buffer, i32 %scevgep.sum (endState: LEGUP_F_sha_update_BB_26_55)
   %scevgep10.i8 = getelementptr i8* %buffer, i32 %scevgep.sum1 (endState: LEGUP_F_sha_update_BB_26_55)
   %scevgep.i6 = getelementptr i8* %buffer, i32 %scevgep.sum2 (endState: LEGUP_F_sha_update_BB_26_55)
   %p2.02.i4 = getelementptr i8* %buffer, i32 %scevgep.sum3 (endState: LEGUP_F_sha_update_BB_26_55)
   %27 = load i8* %p2.02.i4, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_26_57)
   %29 = load i8* %scevgep.i6, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_26_57)
   Transition: default: LEGUP_F_sha_update_BB_26_56
state: LEGUP_F_sha_update_BB_26_56
   %32 = load i8* %scevgep10.i8, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_26_58)
   %35 = load i8* %scevgep12.i10, align 1, !tbaa !1 (endState: LEGUP_F_sha_update_BB_26_58)
   Transition: default: LEGUP_F_sha_update_BB_26_57
state: LEGUP_F_sha_update_BB_26_57
   %28 = zext i8 %27 to i32 (endState: LEGUP_F_sha_update_BB_26_57)
   %30 = zext i8 %29 to i32 (endState: LEGUP_F_sha_update_BB_26_57)
   %31 = shl nuw nsw i32 %30, 8 (endState: LEGUP_F_sha_update_BB_26_57)
   %38 = or i32 %31, %28 (endState: LEGUP_F_sha_update_BB_26_57)
   Transition: default: LEGUP_F_sha_update_BB_26_58
state: LEGUP_F_sha_update_BB_26_58
   %33 = zext i8 %32 to i32 (endState: LEGUP_F_sha_update_BB_26_58)
   %34 = shl nuw nsw i32 %33, 16 (endState: LEGUP_F_sha_update_BB_26_58)
   %36 = zext i8 %35 to i32 (endState: LEGUP_F_sha_update_BB_26_58)
   %37 = shl nuw i32 %36, 24 (endState: LEGUP_F_sha_update_BB_26_58)
   %39 = or i32 %38, %34 (endState: LEGUP_F_sha_update_BB_26_58)
   %40 = or i32 %39, %37 (endState: LEGUP_F_sha_update_BB_26_58)
   Transition: default: LEGUP_F_sha_update_BB_26_59
state: LEGUP_F_sha_update_BB_26_59
   store i32 %40, i32* %p1.01.i11, align 4, !tbaa !0 (endState: LEGUP_F_sha_update_BB_26_59)
   br i1 %exitcond, label %memcpy.exit14.loopexit, label %26
   Transition: if (%exitcond): LEGUP_F_sha_update_BB_memcpy_exit14_loopexit_60 default: LEGUP_F_sha_update_BB_26_54
state: LEGUP_F_sha_update_BB_memcpy_exit14_loopexit_60
   br label %memcpy.exit14
   Transition: default: LEGUP_F_sha_update_BB_memcpy_exit14_61
state: LEGUP_F_sha_update_BB_memcpy_exit14_61
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %4 Num States: 2
Basic Block: %.preheader.lr.ph Num States: 2
Basic Block: %.preheader Num States: 1
Basic Block: %8 Num States: 6
Basic Block: %memcpy.exit Num States: 3
Basic Block: %._crit_edge Num States: 1
Basic Block: %.lr.ph.i Num States: 35
Basic Block: %26 Num States: 6
Basic Block: %memcpy.exit14.loopexit Num States: 1
Basic Block: %memcpy.exit14 Num States: 1
End Function: sha_update
--------------------------------------------------------------------------------

Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB_0_1 default: LEGUP_0
state: LEGUP_F_main_BB_0_1
   store i32 1732584193, i32* @sha_info_digest.0, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_1)
   store i32 -271733879, i32* @sha_info_digest.1, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_1)
   Transition: default: LEGUP_F_main_BB_0_2
state: LEGUP_F_main_BB_0_2
   store i32 -1732584194, i32* @sha_info_digest.2, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_2)
   store i32 271733878, i32* @sha_info_digest.3, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_2)
   Transition: default: LEGUP_F_main_BB_0_3
state: LEGUP_F_main_BB_0_3
   store i32 -1009589776, i32* @sha_info_digest.4, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_3)
   store i32 0, i32* @sha_info_count_lo, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_3)
   Transition: default: LEGUP_F_main_BB_0_4
state: LEGUP_F_main_BB_0_4
   store i32 0, i32* @sha_info_count_hi, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_4)
   Transition: default: LEGUP_F_main_BB_0_5
state: LEGUP_F_main_BB_0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   tail call fastcc void @sha_update(i8* getelementptr inbounds ([2 x [8192 x i8]]* @indata, i32 0, i32 0, i32 0)) nounwind (endState: LEGUP_function_call_6)
   Transition: if (sha_update_finish): LEGUP_F_main_BB_0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB_0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   tail call fastcc void @sha_update(i8* getelementptr inbounds ([2 x [8192 x i8]]* @indata, i32 0, i32 1, i32 0)) nounwind (endState: LEGUP_function_call_8)
   Transition: if (sha_update_finish): LEGUP_F_main_BB_0_9 default: LEGUP_function_call_8
state: LEGUP_F_main_BB_0_9
   %1 = load i32* @sha_info_count_lo, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_11)
   %2 = load i32* @sha_info_count_hi, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_11)
   Transition: default: LEGUP_F_main_BB_0_10
state: LEGUP_F_main_BB_0_10
   Transition: default: LEGUP_F_main_BB_0_11
state: LEGUP_F_main_BB_0_11
   %3 = lshr i32 %1, 3 (endState: LEGUP_F_main_BB_0_11)
   %4 = and i32 %3, 63 (endState: LEGUP_F_main_BB_0_11)
   %5 = add nsw i32 %4, 1 (endState: LEGUP_F_main_BB_0_11)
   %6 = getelementptr inbounds [16 x i32]* @sha_info_data, i32 0, i32 %4 (endState: LEGUP_F_main_BB_0_11)
   %7 = icmp ugt i32 %5, 56 (endState: LEGUP_F_main_BB_0_11)
   Transition: default: LEGUP_F_main_BB_0_12
state: LEGUP_F_main_BB_0_12
   store i32 128, i32* %6, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_0_12)
   br i1 %7, label %.lr.ph6.i.i, label %.lr.ph6.i10.i
   Transition: if (%7): LEGUP_F_main_BB__lr_ph6_i_i_13 default: LEGUP_F_main_BB__lr_ph6_i10_i_29
state: LEGUP_F_main_BB__lr_ph6_i_i_13
   %8 = sub i32 63, %4 (endState: LEGUP_F_main_BB__lr_ph6_i_i_13)
   %9 = icmp ugt i32 %8, 3 (endState: LEGUP_F_main_BB__lr_ph6_i_i_13)
   br i1 %9, label %.lr.ph.i.i, label %.preheader.i2.i
   Transition: if (%9): LEGUP_F_main_BB__lr_ph_i_i_14 default: LEGUP_F_main_BB__preheader_i2_i_20
state: LEGUP_F_main_BB__lr_ph_i_i_14
   %tmp37.i = lshr i32 %8, 2 (endState: LEGUP_F_main_BB__lr_ph_i_i_14)
   %tmp38.i = sub i32 0, %tmp37.i (endState: LEGUP_F_main_BB__lr_ph_i_i_14)
   %tmp39.i = icmp sgt i32 %tmp38.i, -1 (endState: LEGUP_F_main_BB__lr_ph_i_i_14)
   %smax40.i = select i1 %tmp39.i, i32 %tmp38.i, i32 -1 (endState: LEGUP_F_main_BB__lr_ph_i_i_14)
   Transition: default: LEGUP_F_main_BB__lr_ph_i_i_15
state: LEGUP_F_main_BB__lr_ph_i_i_15
   %tmp41.i = add i32 %smax40.i, %tmp37.i (endState: LEGUP_F_main_BB__lr_ph_i_i_15)
   %tmp42.i = add i32 %tmp41.i, 1 (endState: LEGUP_F_main_BB__lr_ph_i_i_15)
   br label %10
   Transition: default: LEGUP_F_main_BB_10_16
state: LEGUP_F_main_BB_10_16
   %indvar.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %indvar.next.i.i, %10 ] (endState: LEGUP_F_main_BB_10_16)
   %tmp45.i = add i32 %5, %indvar.i.i (endState: LEGUP_F_main_BB_10_16)
   %indvar.next.i.i = add i32 %indvar.i.i, 1 (endState: LEGUP_F_main_BB_10_16)
   %exitcond43.i = icmp eq i32 %indvar.next.i.i, %tmp42.i (endState: LEGUP_F_main_BB_10_16)
   Transition: default: LEGUP_F_main_BB_10_17
state: LEGUP_F_main_BB_10_17
   %p.11.i.i = getelementptr [16 x i32]* @sha_info_data, i32 0, i32 %tmp45.i (endState: LEGUP_F_main_BB_10_17)
   Transition: default: LEGUP_F_main_BB_10_18
state: LEGUP_F_main_BB_10_18
   store i32 0, i32* %p.11.i.i, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_10_18)
   br i1 %exitcond43.i, label %.preheader.i2.i.loopexit, label %10
   Transition: if (%exitcond43.i): LEGUP_F_main_BB__preheader_i2_i_loopexit_19 default: LEGUP_F_main_BB_10_16
state: LEGUP_F_main_BB__preheader_i2_i_loopexit_19
   br label %.preheader.i2.i
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_20
state: LEGUP_F_main_BB__preheader_i2_i_20
   Transition: default: LEGUP_function_call_21
state: LEGUP_function_call_21
   tail call fastcc void @sha_transform() nounwind (endState: LEGUP_function_call_21)
   Transition: if (sha_transform_finish): LEGUP_F_main_BB__preheader_i2_i_22 default: LEGUP_function_call_21
state: LEGUP_F_main_BB__preheader_i2_i_22
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 0), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_22)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 1), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_22)
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_23
state: LEGUP_F_main_BB__preheader_i2_i_23
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 2), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_23)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 3), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_23)
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_24
state: LEGUP_F_main_BB__preheader_i2_i_24
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 4), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_24)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 5), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_24)
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_25
state: LEGUP_F_main_BB__preheader_i2_i_25
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 6), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_25)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 7), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_25)
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_26
state: LEGUP_F_main_BB__preheader_i2_i_26
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 8), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_26)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 9), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_26)
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_27
state: LEGUP_F_main_BB__preheader_i2_i_27
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 10), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_27)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 11), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_27)
   Transition: default: LEGUP_F_main_BB__preheader_i2_i_28
state: LEGUP_F_main_BB__preheader_i2_i_28
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 12), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_28)
   store i32 0, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 13), align 4, !tbaa !0 (endState: LEGUP_F_main_BB__preheader_i2_i_28)
   br label %sha_final.exit
   Transition: default: LEGUP_F_main_BB_sha_final_exit_69
state: LEGUP_F_main_BB__lr_ph6_i10_i_29
   %11 = sub i32 55, %4 (endState: LEGUP_F_main_BB__lr_ph6_i10_i_29)
   %13 = icmp sgt i32 %11, 3 (endState: LEGUP_F_main_BB__lr_ph6_i10_i_29)
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_30
state: LEGUP_F_main_BB__lr_ph6_i10_i_30
   %12 = sdiv i32 %11, 4 (endState: LEGUP_F_main_BB__lr_ph6_i10_i_62)
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_31
state: LEGUP_F_main_BB__lr_ph6_i10_i_31
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_32
state: LEGUP_F_main_BB__lr_ph6_i10_i_32
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_33
state: LEGUP_F_main_BB__lr_ph6_i10_i_33
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_34
state: LEGUP_F_main_BB__lr_ph6_i10_i_34
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_35
state: LEGUP_F_main_BB__lr_ph6_i10_i_35
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_36
state: LEGUP_F_main_BB__lr_ph6_i10_i_36
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_37
state: LEGUP_F_main_BB__lr_ph6_i10_i_37
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_38
state: LEGUP_F_main_BB__lr_ph6_i10_i_38
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_39
state: LEGUP_F_main_BB__lr_ph6_i10_i_39
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_40
state: LEGUP_F_main_BB__lr_ph6_i10_i_40
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_41
state: LEGUP_F_main_BB__lr_ph6_i10_i_41
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_42
state: LEGUP_F_main_BB__lr_ph6_i10_i_42
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_43
state: LEGUP_F_main_BB__lr_ph6_i10_i_43
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_44
state: LEGUP_F_main_BB__lr_ph6_i10_i_44
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_45
state: LEGUP_F_main_BB__lr_ph6_i10_i_45
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_46
state: LEGUP_F_main_BB__lr_ph6_i10_i_46
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_47
state: LEGUP_F_main_BB__lr_ph6_i10_i_47
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_48
state: LEGUP_F_main_BB__lr_ph6_i10_i_48
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_49
state: LEGUP_F_main_BB__lr_ph6_i10_i_49
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_50
state: LEGUP_F_main_BB__lr_ph6_i10_i_50
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_51
state: LEGUP_F_main_BB__lr_ph6_i10_i_51
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_52
state: LEGUP_F_main_BB__lr_ph6_i10_i_52
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_53
state: LEGUP_F_main_BB__lr_ph6_i10_i_53
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_54
state: LEGUP_F_main_BB__lr_ph6_i10_i_54
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_55
state: LEGUP_F_main_BB__lr_ph6_i10_i_55
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_56
state: LEGUP_F_main_BB__lr_ph6_i10_i_56
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_57
state: LEGUP_F_main_BB__lr_ph6_i10_i_57
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_58
state: LEGUP_F_main_BB__lr_ph6_i10_i_58
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_59
state: LEGUP_F_main_BB__lr_ph6_i10_i_59
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_60
state: LEGUP_F_main_BB__lr_ph6_i10_i_60
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_61
state: LEGUP_F_main_BB__lr_ph6_i10_i_61
   Transition: default: LEGUP_F_main_BB__lr_ph6_i10_i_62
state: LEGUP_F_main_BB__lr_ph6_i10_i_62
   br i1 %13, label %.lr.ph.i18.i, label %sha_final.exit
   Transition: if (%13): LEGUP_F_main_BB__lr_ph_i18_i_63 default: LEGUP_F_main_BB_sha_final_exit_69
state: LEGUP_F_main_BB__lr_ph_i18_i_63
   %tmp.i13.i = sub i32 0, %12 (endState: LEGUP_F_main_BB__lr_ph_i18_i_63)
   %tmp.i = icmp sgt i32 %tmp.i13.i, -1 (endState: LEGUP_F_main_BB__lr_ph_i18_i_63)
   %smax.i = select i1 %tmp.i, i32 %tmp.i13.i, i32 -1 (endState: LEGUP_F_main_BB__lr_ph_i18_i_63)
   Transition: default: LEGUP_F_main_BB__lr_ph_i18_i_64
state: LEGUP_F_main_BB__lr_ph_i18_i_64
   %tmp25.i = add i32 %12, %smax.i (endState: LEGUP_F_main_BB__lr_ph_i18_i_64)
   %tmp26.i = add i32 %tmp25.i, 1 (endState: LEGUP_F_main_BB__lr_ph_i18_i_64)
   br label %14
   Transition: default: LEGUP_F_main_BB_14_65
state: LEGUP_F_main_BB_14_65
   %indvar.i19.i = phi i32 [ 0, %.lr.ph.i18.i ], [ %indvar.next.i21.i, %14 ] (endState: LEGUP_F_main_BB_14_65)
   %tmp31.i = add i32 %5, %indvar.i19.i (endState: LEGUP_F_main_BB_14_65)
   %indvar.next.i21.i = add i32 %indvar.i19.i, 1 (endState: LEGUP_F_main_BB_14_65)
   %exitcond.i = icmp eq i32 %indvar.next.i21.i, %tmp26.i (endState: LEGUP_F_main_BB_14_65)
   Transition: default: LEGUP_F_main_BB_14_66
state: LEGUP_F_main_BB_14_66
   %p.11.i20.i = getelementptr [16 x i32]* @sha_info_data, i32 0, i32 %tmp31.i (endState: LEGUP_F_main_BB_14_66)
   Transition: default: LEGUP_F_main_BB_14_67
state: LEGUP_F_main_BB_14_67
   store i32 0, i32* %p.11.i20.i, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_14_67)
   br i1 %exitcond.i, label %sha_final.exit.loopexit, label %14
   Transition: if (%exitcond.i): LEGUP_F_main_BB_sha_final_exit_loopexit_68 default: LEGUP_F_main_BB_14_65
state: LEGUP_F_main_BB_sha_final_exit_loopexit_68
   br label %sha_final.exit
   Transition: default: LEGUP_F_main_BB_sha_final_exit_69
state: LEGUP_F_main_BB_sha_final_exit_69
   store i32 %2, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 14), align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_69)
   store i32 %1, i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 15), align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_69)
   Transition: default: LEGUP_F_main_BB_sha_final_exit_70
state: LEGUP_F_main_BB_sha_final_exit_70
   Transition: default: LEGUP_function_call_71
state: LEGUP_function_call_71
   tail call fastcc void @sha_transform() nounwind (endState: LEGUP_function_call_71)
   Transition: if (sha_transform_finish): LEGUP_F_main_BB_sha_final_exit_72 default: LEGUP_function_call_71
state: LEGUP_F_main_BB_sha_final_exit_72
   %15 = load i32* @sha_info_digest.0, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   %18 = load i32* @sha_info_digest.1, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   Transition: default: LEGUP_F_main_BB_sha_final_exit_73
state: LEGUP_F_main_BB_sha_final_exit_73
   %22 = load i32* @sha_info_digest.2, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   %26 = load i32* @sha_info_digest.3, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   Transition: default: LEGUP_F_main_BB_sha_final_exit_74
state: LEGUP_F_main_BB_sha_final_exit_74
   %16 = icmp eq i32 %15, 6969911 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   %17 = zext i1 %16 to i32 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   %19 = icmp eq i32 %18, -1814260603 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   %20 = zext i1 %19 to i32 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   %21 = add nsw i32 %20, %17 (endState: LEGUP_F_main_BB_sha_final_exit_74)
   %30 = load i32* @sha_info_digest.4, align 4, !tbaa !0 (endState: LEGUP_F_main_BB_sha_final_exit_76)
   Transition: default: LEGUP_F_main_BB_sha_final_exit_75
state: LEGUP_F_main_BB_sha_final_exit_75
   %23 = icmp eq i32 %22, 742465810 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   %24 = zext i1 %23 to i32 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   %25 = add nsw i32 %24, %21 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   %27 = icmp eq i32 %26, 1677179459 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   %28 = zext i1 %27 to i32 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   %29 = add nsw i32 %28, %25 (endState: LEGUP_F_main_BB_sha_final_exit_75)
   Transition: default: LEGUP_F_main_BB_sha_final_exit_76
state: LEGUP_F_main_BB_sha_final_exit_76
   %31 = icmp eq i32 %30, -1384908510 (endState: LEGUP_F_main_BB_sha_final_exit_76)
   %32 = zext i1 %31 to i32 (endState: LEGUP_F_main_BB_sha_final_exit_76)
   %33 = add nsw i32 %32, %29 (endState: LEGUP_F_main_BB_sha_final_exit_76)
   %34 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0), i32 %33) nounwind (endState: LEGUP_F_main_BB_sha_final_exit_76)
   %35 = icmp eq i32 %33, 5 (endState: LEGUP_F_main_BB_sha_final_exit_76)
   br i1 %35, label %36, label %38
   Transition: if (%35): LEGUP_F_main_BB_36_77 default: LEGUP_F_main_BB_38_78
state: LEGUP_F_main_BB_36_77
   %37 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str1, i32 0, i32 0)) nounwind (endState: LEGUP_F_main_BB_36_77)
   br label %40
   Transition: default: LEGUP_F_main_BB_40_79
state: LEGUP_F_main_BB_38_78
   %39 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str2, i32 0, i32 0)) nounwind (endState: LEGUP_F_main_BB_38_78)
   br label %40
   Transition: default: LEGUP_F_main_BB_40_79
state: LEGUP_F_main_BB_40_79
   ret i32 %33
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 12
Basic Block: %.lr.ph6.i.i Num States: 1
Basic Block: %.lr.ph.i.i Num States: 2
Basic Block: %10 Num States: 3
Basic Block: %.preheader.i2.i.loopexit Num States: 1
Basic Block: %.preheader.i2.i Num States: 9
Basic Block: %.lr.ph6.i10.i Num States: 34
Basic Block: %.lr.ph.i18.i Num States: 2
Basic Block: %14 Num States: 3
Basic Block: %sha_final.exit.loopexit Num States: 1
Basic Block: %sha_final.exit Num States: 8
Basic Block: %36 Num States: 1
Basic Block: %38 Num States: 1
Basic Block: %40 Num States: 1
End Function: main
--------------------------------------------------------------------------------

Start Function: sha_transform
state: LEGUP_0
   Transition: if (start): LEGUP_F_sha_transform_BB__preheader27_1 default: LEGUP_0
state: LEGUP_F_sha_transform_BB__preheader27_1
   %W = alloca [80 x i32], align 4 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63 = getelementptr [80 x i32]* %W, i32 0, i32 0 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %0 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 0), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_3)
   %scevgep63.1 = getelementptr [80 x i32]* %W, i32 0, i32 1 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %1 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 1), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_3)
   %scevgep63.2 = getelementptr [80 x i32]* %W, i32 0, i32 2 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.3 = getelementptr [80 x i32]* %W, i32 0, i32 3 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.4 = getelementptr [80 x i32]* %W, i32 0, i32 4 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.5 = getelementptr [80 x i32]* %W, i32 0, i32 5 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.6 = getelementptr [80 x i32]* %W, i32 0, i32 6 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.7 = getelementptr [80 x i32]* %W, i32 0, i32 7 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.8 = getelementptr [80 x i32]* %W, i32 0, i32 8 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.9 = getelementptr [80 x i32]* %W, i32 0, i32 9 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.10 = getelementptr [80 x i32]* %W, i32 0, i32 10 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.11 = getelementptr [80 x i32]* %W, i32 0, i32 11 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.12 = getelementptr [80 x i32]* %W, i32 0, i32 12 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.13 = getelementptr [80 x i32]* %W, i32 0, i32 13 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.14 = getelementptr [80 x i32]* %W, i32 0, i32 14 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   %scevgep63.15 = getelementptr [80 x i32]* %W, i32 0, i32 15 (endState: LEGUP_F_sha_transform_BB__preheader27_1)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_2
state: LEGUP_F_sha_transform_BB__preheader27_2
   %2 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 2), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_4)
   %3 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 3), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_4)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_3
state: LEGUP_F_sha_transform_BB__preheader27_3
   %4 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 4), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_5)
   %5 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 5), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_5)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_4
state: LEGUP_F_sha_transform_BB__preheader27_4
   %6 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 6), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_6)
   %7 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 7), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_6)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_5
state: LEGUP_F_sha_transform_BB__preheader27_5
   %8 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 8), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_7)
   %9 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 9), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_7)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_6
state: LEGUP_F_sha_transform_BB__preheader27_6
   %10 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 10), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_8)
   %11 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 11), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_8)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_7
state: LEGUP_F_sha_transform_BB__preheader27_7
   %12 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 12), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_9)
   %13 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 13), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_9)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_8
state: LEGUP_F_sha_transform_BB__preheader27_8
   %14 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 14), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_10)
   %15 = load i32* getelementptr inbounds ([16 x i32]* @sha_info_data, i32 0, i32 15), align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_10)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_9
state: LEGUP_F_sha_transform_BB__preheader27_9
   store i32 %0, i32* %scevgep63, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_9)
   store i32 %1, i32* %scevgep63.1, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_9)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_10
state: LEGUP_F_sha_transform_BB__preheader27_10
   store i32 %2, i32* %scevgep63.2, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_10)
   store i32 %3, i32* %scevgep63.3, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_10)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_11
state: LEGUP_F_sha_transform_BB__preheader27_11
   store i32 %4, i32* %scevgep63.4, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_11)
   store i32 %5, i32* %scevgep63.5, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_11)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_12
state: LEGUP_F_sha_transform_BB__preheader27_12
   store i32 %6, i32* %scevgep63.6, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_12)
   store i32 %7, i32* %scevgep63.7, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_12)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_13
state: LEGUP_F_sha_transform_BB__preheader27_13
   store i32 %8, i32* %scevgep63.8, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_13)
   store i32 %9, i32* %scevgep63.9, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_13)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_14
state: LEGUP_F_sha_transform_BB__preheader27_14
   store i32 %10, i32* %scevgep63.10, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_14)
   store i32 %11, i32* %scevgep63.11, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_14)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_15
state: LEGUP_F_sha_transform_BB__preheader27_15
   store i32 %12, i32* %scevgep63.12, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_15)
   store i32 %13, i32* %scevgep63.13, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_15)
   Transition: default: LEGUP_F_sha_transform_BB__preheader27_16
state: LEGUP_F_sha_transform_BB__preheader27_16
   store i32 %14, i32* %scevgep63.14, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_16)
   store i32 %15, i32* %scevgep63.15, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader27_16)
   br label %16
   Transition: default: LEGUP_F_sha_transform_BB_16_17
state: LEGUP_F_sha_transform_BB_16_17
   %17 = phi i32 [ %0, %.preheader27 ], [ %.pre, %._crit_edge ] (endState: LEGUP_F_sha_transform_BB_16_17)
   %indvar49 = phi i32 [ 0, %.preheader27 ], [ %indvar.next50, %._crit_edge ] (endState: LEGUP_F_sha_transform_BB_16_17)
   %tmp52 = add i32 %indvar49, 16 (endState: LEGUP_F_sha_transform_BB_16_17)
   %tmp54 = add i32 %indvar49, 13 (endState: LEGUP_F_sha_transform_BB_16_17)
   %tmp56 = add i32 %indvar49, 8 (endState: LEGUP_F_sha_transform_BB_16_17)
   %tmp58 = add i32 %indvar49, 2 (endState: LEGUP_F_sha_transform_BB_16_17)
   %indvar.next50 = add i32 %indvar49, 1 (endState: LEGUP_F_sha_transform_BB_16_17)
   %exitcond51 = icmp eq i32 %indvar.next50, 64 (endState: LEGUP_F_sha_transform_BB_16_17)
   Transition: default: LEGUP_F_sha_transform_BB_16_18
state: LEGUP_F_sha_transform_BB_16_18
   %scevgep53 = getelementptr [80 x i32]* %W, i32 0, i32 %tmp52 (endState: LEGUP_F_sha_transform_BB_16_18)
   %scevgep55 = getelementptr [80 x i32]* %W, i32 0, i32 %tmp54 (endState: LEGUP_F_sha_transform_BB_16_18)
   %scevgep57 = getelementptr [80 x i32]* %W, i32 0, i32 %tmp56 (endState: LEGUP_F_sha_transform_BB_16_18)
   %scevgep59 = getelementptr [80 x i32]* %W, i32 0, i32 %tmp58 (endState: LEGUP_F_sha_transform_BB_16_18)
   %18 = load i32* %scevgep55, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_16_20)
   %19 = load i32* %scevgep57, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_16_20)
   Transition: default: LEGUP_F_sha_transform_BB_16_19
state: LEGUP_F_sha_transform_BB_16_19
   %20 = load i32* %scevgep59, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_16_21)
   Transition: default: LEGUP_F_sha_transform_BB_16_20
state: LEGUP_F_sha_transform_BB_16_20
   %21 = xor i32 %19, %18 (endState: LEGUP_F_sha_transform_BB_16_20)
   Transition: default: LEGUP_F_sha_transform_BB_16_21
state: LEGUP_F_sha_transform_BB_16_21
   %22 = xor i32 %21, %20 (endState: LEGUP_F_sha_transform_BB_16_21)
   %23 = xor i32 %22, %17 (endState: LEGUP_F_sha_transform_BB_16_21)
   Transition: default: LEGUP_F_sha_transform_BB_16_22
state: LEGUP_F_sha_transform_BB_16_22
   store i32 %23, i32* %scevgep53, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_16_22)
   br i1 %exitcond51, label %24, label %._crit_edge
   Transition: if (%exitcond51): LEGUP_F_sha_transform_BB_24_26 default: LEGUP_F_sha_transform_BB___crit_edge_23
state: LEGUP_F_sha_transform_BB___crit_edge_23
   %scevgep60.phi.trans.insert = getelementptr [80 x i32]* %W, i32 0, i32 %indvar.next50 (endState: LEGUP_F_sha_transform_BB___crit_edge_23)
   %.pre = load i32* %scevgep60.phi.trans.insert, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB___crit_edge_25)
   Transition: default: LEGUP_F_sha_transform_BB___crit_edge_24
state: LEGUP_F_sha_transform_BB___crit_edge_24
   Transition: default: LEGUP_F_sha_transform_BB___crit_edge_25
state: LEGUP_F_sha_transform_BB___crit_edge_25
   br label %16
   Transition: default: LEGUP_F_sha_transform_BB_16_17
state: LEGUP_F_sha_transform_BB_24_26
   %25 = load i32* @sha_info_digest.0, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_24_28)
   %26 = load i32* @sha_info_digest.1, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_24_28)
   Transition: default: LEGUP_F_sha_transform_BB_24_27
state: LEGUP_F_sha_transform_BB_24_27
   %27 = load i32* @sha_info_digest.2, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_24_29)
   %28 = load i32* @sha_info_digest.3, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_24_29)
   Transition: default: LEGUP_F_sha_transform_BB_24_28
state: LEGUP_F_sha_transform_BB_24_28
   %29 = load i32* @sha_info_digest.4, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_24_30)
   Transition: default: LEGUP_F_sha_transform_BB_24_29
state: LEGUP_F_sha_transform_BB_24_29
   Transition: default: LEGUP_F_sha_transform_BB_24_30
state: LEGUP_F_sha_transform_BB_24_30
   br label %30
   Transition: default: LEGUP_F_sha_transform_BB_30_31
state: LEGUP_F_sha_transform_BB_30_31
   %i.226 = phi i32 [ 0, %24 ], [ %46, %30 ] (endState: LEGUP_F_sha_transform_BB_30_31)
   %A.025 = phi i32 [ %25, %24 ], [ %42, %30 ] (endState: LEGUP_F_sha_transform_BB_30_31)
   %B.024 = phi i32 [ %26, %24 ], [ %A.025, %30 ] (endState: LEGUP_F_sha_transform_BB_30_31)
   %C.023 = phi i32 [ %27, %24 ], [ %45, %30 ] (endState: LEGUP_F_sha_transform_BB_30_31)
   %D.022 = phi i32 [ %28, %24 ], [ %C.023, %30 ] (endState: LEGUP_F_sha_transform_BB_30_31)
   %E.021 = phi i32 [ %29, %24 ], [ %D.022, %30 ] (endState: LEGUP_F_sha_transform_BB_30_31)
   %scevgep48 = getelementptr [80 x i32]* %W, i32 0, i32 %i.226 (endState: LEGUP_F_sha_transform_BB_30_31)
   %31 = shl i32 %A.025, 5 (endState: LEGUP_F_sha_transform_BB_30_31)
   %32 = lshr i32 %A.025, 27 (endState: LEGUP_F_sha_transform_BB_30_31)
   %33 = or i32 %31, %32 (endState: LEGUP_F_sha_transform_BB_30_31)
   %34 = and i32 %B.024, %C.023 (endState: LEGUP_F_sha_transform_BB_30_31)
   %35 = xor i32 %B.024, -1 (endState: LEGUP_F_sha_transform_BB_30_31)
   %36 = and i32 %D.022, %35 (endState: LEGUP_F_sha_transform_BB_30_31)
   %37 = or i32 %34, %36 (endState: LEGUP_F_sha_transform_BB_30_31)
   %38 = load i32* %scevgep48, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_30_33)
   %39 = add i32 %E.021, 1518500249 (endState: LEGUP_F_sha_transform_BB_30_31)
   %40 = add i32 %39, %37 (endState: LEGUP_F_sha_transform_BB_30_31)
   %41 = add i32 %40, %33 (endState: LEGUP_F_sha_transform_BB_30_31)
   %43 = shl i32 %B.024, 30 (endState: LEGUP_F_sha_transform_BB_30_31)
   %44 = lshr i32 %B.024, 2 (endState: LEGUP_F_sha_transform_BB_30_31)
   %45 = or i32 %43, %44 (endState: LEGUP_F_sha_transform_BB_30_31)
   %46 = add nsw i32 %i.226, 1 (endState: LEGUP_F_sha_transform_BB_30_31)
   %exitcond47 = icmp eq i32 %46, 20 (endState: LEGUP_F_sha_transform_BB_30_31)
   Transition: default: LEGUP_F_sha_transform_BB_30_32
state: LEGUP_F_sha_transform_BB_30_32
   Transition: default: LEGUP_F_sha_transform_BB_30_33
state: LEGUP_F_sha_transform_BB_30_33
   %42 = add i32 %41, %38 (endState: LEGUP_F_sha_transform_BB_30_33)
   br i1 %exitcond47, label %.preheader14.preheader, label %30
   Transition: if (%exitcond47): LEGUP_F_sha_transform_BB__preheader14_preheader_34 default: LEGUP_F_sha_transform_BB_30_31
state: LEGUP_F_sha_transform_BB__preheader14_preheader_34
   br label %.preheader14
   Transition: default: LEGUP_F_sha_transform_BB__preheader14_35
state: LEGUP_F_sha_transform_BB__preheader14_35
   %indvar40 = phi i32 [ %indvar.next41, %.preheader14 ], [ 0, %.preheader14.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %A.119 = phi i32 [ %56, %.preheader14 ], [ %42, %.preheader14.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %B.118 = phi i32 [ %A.119, %.preheader14 ], [ %A.025, %.preheader14.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %C.117 = phi i32 [ %59, %.preheader14 ], [ %45, %.preheader14.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %D.116 = phi i32 [ %C.117, %.preheader14 ], [ %C.023, %.preheader14.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %E.115 = phi i32 [ %D.116, %.preheader14 ], [ %D.022, %.preheader14.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %tmp43 = add i32 %indvar40, 20 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %47 = shl i32 %A.119, 5 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %48 = lshr i32 %A.119, 27 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %49 = or i32 %47, %48 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %50 = xor i32 %C.117, %D.116 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %51 = xor i32 %50, %B.118 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %53 = add i32 %E.115, 1859775393 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %54 = add i32 %53, %51 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %55 = add i32 %54, %49 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %57 = shl i32 %B.118, 30 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %58 = lshr i32 %B.118, 2 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %59 = or i32 %57, %58 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %indvar.next41 = add i32 %indvar40, 1 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   %exitcond42 = icmp eq i32 %indvar.next41, 20 (endState: LEGUP_F_sha_transform_BB__preheader14_35)
   Transition: default: LEGUP_F_sha_transform_BB__preheader14_36
state: LEGUP_F_sha_transform_BB__preheader14_36
   %scevgep44 = getelementptr [80 x i32]* %W, i32 0, i32 %tmp43 (endState: LEGUP_F_sha_transform_BB__preheader14_36)
   %52 = load i32* %scevgep44, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader14_38)
   Transition: default: LEGUP_F_sha_transform_BB__preheader14_37
state: LEGUP_F_sha_transform_BB__preheader14_37
   Transition: default: LEGUP_F_sha_transform_BB__preheader14_38
state: LEGUP_F_sha_transform_BB__preheader14_38
   %56 = add i32 %55, %52 (endState: LEGUP_F_sha_transform_BB__preheader14_38)
   br i1 %exitcond42, label %.preheader7.preheader, label %.preheader14
   Transition: if (%exitcond42): LEGUP_F_sha_transform_BB__preheader7_preheader_39 default: LEGUP_F_sha_transform_BB__preheader14_35
state: LEGUP_F_sha_transform_BB__preheader7_preheader_39
   br label %.preheader7
   Transition: default: LEGUP_F_sha_transform_BB__preheader7_40
state: LEGUP_F_sha_transform_BB__preheader7_40
   %indvar33 = phi i32 [ %indvar.next34, %.preheader7 ], [ 0, %.preheader7.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %A.212 = phi i32 [ %71, %.preheader7 ], [ %56, %.preheader7.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %B.211 = phi i32 [ %A.212, %.preheader7 ], [ %A.119, %.preheader7.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %C.210 = phi i32 [ %74, %.preheader7 ], [ %59, %.preheader7.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %D.29 = phi i32 [ %C.210, %.preheader7 ], [ %C.117, %.preheader7.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %E.28 = phi i32 [ %D.29, %.preheader7 ], [ %D.116, %.preheader7.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %tmp36 = add i32 %indvar33, 40 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %60 = shl i32 %A.212, 5 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %61 = lshr i32 %A.212, 27 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %62 = or i32 %60, %61 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %63 = or i32 %C.210, %D.29 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %64 = and i32 %B.211, %63 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %65 = and i32 %C.210, %D.29 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %66 = or i32 %64, %65 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %68 = add i32 %E.28, -1894007588 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %69 = add i32 %68, %66 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %70 = add i32 %69, %62 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %72 = shl i32 %B.211, 30 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %73 = lshr i32 %B.211, 2 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %74 = or i32 %72, %73 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %indvar.next34 = add i32 %indvar33, 1 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   %exitcond35 = icmp eq i32 %indvar.next34, 20 (endState: LEGUP_F_sha_transform_BB__preheader7_40)
   Transition: default: LEGUP_F_sha_transform_BB__preheader7_41
state: LEGUP_F_sha_transform_BB__preheader7_41
   %scevgep37 = getelementptr [80 x i32]* %W, i32 0, i32 %tmp36 (endState: LEGUP_F_sha_transform_BB__preheader7_41)
   %67 = load i32* %scevgep37, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader7_43)
   Transition: default: LEGUP_F_sha_transform_BB__preheader7_42
state: LEGUP_F_sha_transform_BB__preheader7_42
   Transition: default: LEGUP_F_sha_transform_BB__preheader7_43
state: LEGUP_F_sha_transform_BB__preheader7_43
   %71 = add i32 %70, %67 (endState: LEGUP_F_sha_transform_BB__preheader7_43)
   br i1 %exitcond35, label %.preheader.preheader, label %.preheader7
   Transition: if (%exitcond35): LEGUP_F_sha_transform_BB__preheader_preheader_44 default: LEGUP_F_sha_transform_BB__preheader7_40
state: LEGUP_F_sha_transform_BB__preheader_preheader_44
   br label %.preheader
   Transition: default: LEGUP_F_sha_transform_BB__preheader_45
state: LEGUP_F_sha_transform_BB__preheader_45
   %indvar = phi i32 [ %indvar.next, %.preheader ], [ 0, %.preheader.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %A.35 = phi i32 [ %84, %.preheader ], [ %71, %.preheader.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %B.34 = phi i32 [ %A.35, %.preheader ], [ %A.212, %.preheader.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %C.33 = phi i32 [ %87, %.preheader ], [ %74, %.preheader.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %D.32 = phi i32 [ %C.33, %.preheader ], [ %C.210, %.preheader.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %E.31 = phi i32 [ %D.32, %.preheader ], [ %D.29, %.preheader.preheader ] (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %tmp = add i32 %indvar, 60 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %75 = shl i32 %A.35, 5 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %76 = lshr i32 %A.35, 27 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %77 = or i32 %75, %76 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %78 = xor i32 %C.33, %D.32 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %79 = xor i32 %78, %B.34 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %81 = add i32 %E.31, -899497514 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %82 = add i32 %81, %79 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %83 = add i32 %82, %77 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %85 = shl i32 %B.34, 30 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %86 = lshr i32 %B.34, 2 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %87 = or i32 %85, %86 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   %exitcond = icmp eq i32 %indvar.next, 20 (endState: LEGUP_F_sha_transform_BB__preheader_45)
   Transition: default: LEGUP_F_sha_transform_BB__preheader_46
state: LEGUP_F_sha_transform_BB__preheader_46
   %scevgep = getelementptr [80 x i32]* %W, i32 0, i32 %tmp (endState: LEGUP_F_sha_transform_BB__preheader_46)
   %80 = load i32* %scevgep, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB__preheader_48)
   Transition: default: LEGUP_F_sha_transform_BB__preheader_47
state: LEGUP_F_sha_transform_BB__preheader_47
   Transition: default: LEGUP_F_sha_transform_BB__preheader_48
state: LEGUP_F_sha_transform_BB__preheader_48
   %84 = add i32 %83, %80 (endState: LEGUP_F_sha_transform_BB__preheader_48)
   br i1 %exitcond, label %88, label %.preheader
   Transition: if (%exitcond): LEGUP_F_sha_transform_BB_88_49 default: LEGUP_F_sha_transform_BB__preheader_45
state: LEGUP_F_sha_transform_BB_88_49
   %89 = add i32 %25, %84 (endState: LEGUP_F_sha_transform_BB_88_49)
   %90 = add i32 %26, %A.35 (endState: LEGUP_F_sha_transform_BB_88_49)
   %91 = add i32 %27, %87 (endState: LEGUP_F_sha_transform_BB_88_49)
   %92 = add i32 %28, %C.33 (endState: LEGUP_F_sha_transform_BB_88_49)
   %93 = add i32 %29, %D.32 (endState: LEGUP_F_sha_transform_BB_88_49)
   Transition: default: LEGUP_F_sha_transform_BB_88_50
state: LEGUP_F_sha_transform_BB_88_50
   store i32 %89, i32* @sha_info_digest.0, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_88_50)
   store i32 %90, i32* @sha_info_digest.1, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_88_50)
   Transition: default: LEGUP_F_sha_transform_BB_88_51
state: LEGUP_F_sha_transform_BB_88_51
   store i32 %91, i32* @sha_info_digest.2, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_88_51)
   store i32 %92, i32* @sha_info_digest.3, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_88_51)
   Transition: default: LEGUP_F_sha_transform_BB_88_52
state: LEGUP_F_sha_transform_BB_88_52
   store i32 %93, i32* @sha_info_digest.4, align 4, !tbaa !0 (endState: LEGUP_F_sha_transform_BB_88_52)
   ret void
   Transition: default: LEGUP_0

Basic Block: %.preheader27 Num States: 16
Basic Block: %16 Num States: 6
Basic Block: %._crit_edge Num States: 3
Basic Block: %24 Num States: 5
Basic Block: %30 Num States: 3
Basic Block: %.preheader14.preheader Num States: 1
Basic Block: %.preheader14 Num States: 4
Basic Block: %.preheader7.preheader Num States: 1
Basic Block: %.preheader7 Num States: 4
Basic Block: %.preheader.preheader Num States: 1
Basic Block: %.preheader Num States: 4
Basic Block: %88 Num States: 4
End Function: sha_transform
--------------------------------------------------------------------------------

